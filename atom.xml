<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[bird 學習日記]]></title>
  <subtitle><![CDATA[做到老學到老]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://yoursite.com/"/>
  <updated>2016-02-03T07:14:18.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name><![CDATA[bird]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[\ionic/ 環境架設]]></title>
    <link href="http://yoursite.com/2016/02/01/Ionic/"/>
    <id>http://yoursite.com/2016/02/01/Ionic/</id>
    <published>2016-02-01T02:30:20.000Z</published>
    <updated>2016-02-03T07:14:18.000Z</updated>
    <content type="html"><![CDATA[<h3 id="前言">前言</h3><p>一般我們所知的手機作業系統，以最大宗來說，iOS與Android為主要兩大市場，當然也有windows phone等等其他作業系統，這些相互獨立的市場，開發條件與方式當然截然不同。</p>
<p>想要成為一個行動裝置軟體開發者，首先你要選擇你想攻佔的是屬於apple系列（ios）還是google系列(Android)的領土，才能進行對應技術的學習與開發。</p>
<p>請下關鍵字：</p>
<p>apple系列（ios）：Ｘcode, Swift, Object-C(舊), Mac電腦 ….</p>
<p>google系列(Android)：Android Studio, Java, XML, Eclipse(舊) … </p>
<p>倘若，你有個理想，想要擁有一把劍能在兩大領土都能大開殺戒的武器，<strong>ionic</strong>是你最好的選擇。如果你又剛剛好會寫網頁、架網站，哇～你應該就是拿破崙了，開疆闢土都沒問題了。</p>
<p>已經有許多開發成功的案例在你我手機App Store/Google Play裡了，看看官網上的<a href="http://showcase.ionicframework.com/" target="_blank" rel="external"><code>Showcase</code></a>吧~</p>
<p>有信心百倍了嗎？心動不如行動吧！</p>
<h3 id="關於ionic">關於ionic</h3><p>以建立 hybrid mobile apps 為目標的 HTML5 mobile app 開發框架。</p>
<p>有別於目前 Native 方式（前言提到下關鍵字者會告訴你）， Native 方式效能較佳且可以對於硬體有更好的掌握，但缺點是開發週期較長。而ionic實際上就是跑在瀏覽器內核上可以操控硬體的小網站，缺點是效能比起 Native 還是有些差距。</p>
<p>也可以上架到市集給使用者下載，優勢是跨平台、開發速度快、可以使用許多第三方的程式碼</p>
<h3 id="先備技術知識">先備技術知識</h3><ol>
<li>HTML 5</li>
<li>Angular Js</li>
<li>Restful API</li>
<li>Sass </li>
</ol>
<p>就是寫網頁了吧～看起來是前端技術，開心的是，後端用你在行的技術就可以了～</p>
<h3 id="Step1_QUICK_START">Step1 QUICK START</h3><p>現在我們開始照的官網上的指示一步一步走</p>
<p><a href="http://ionicframework.com/getting-started/" target="_blank" rel="external"><code>官網圖文並茂版(點我)</code></a></p>
<p><a href="https://www.youtube.com/watch?v=15daTaDQ6Yg" target="_blank" rel="external"><code>英文影片版(點我)</code></a></p>
<p>隨客官愛好進行版本選學，最後附上<code>簡易版(下拉)教學</code>給客官賞味 XD</p>
<h4 id="Step2_安裝環境設置">Step2 安裝環境設置</h4><p>確認自己的電腦是否有安裝 <strong>Node.js 4 </strong>與<strong> 最新的 Apache Cordova</strong>。</p>
<p>以及設置iOS與Android開發依循環境，特別是iOS必須在Mac OS X環境下才能測試開發。</p>
<p><a href="https://nodejs.org/en/" target="_blank" rel="external">Node.js 4</a>:直接下載並安裝小於5的版本使用</p>
<p><a href="https://www.npmjs.com/package/ionic" target="_blank" rel="external">Cordova ionic</a>: 開啟command line 透過 Node.js 的 npm 指令下載</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="operator"><span class="keyword">install</span> -<span class="keyword">g</span> cordova ionic</span></span><br></pre></td></tr></table></figure>
<p><a href="http://developer.android.com/sdk/index.html" target="_blank" rel="external">Android Studio</a>: 請可安裝Android Studio或是單獨安裝 <a href="http://developer.android.com/intl/zh-tw/sdk/index.html#Other" target="_blank" rel="external">sdk</a>。並確認SDK版本</p>
<h4 id="Step3_建立專案">Step3 建立專案</h4><ol>
<li><p>cd到你想建立專案的資料夾，利用模組範例，建立一個新的專案資料夾</p>
 <figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ionic <span class="keyword">start</span> &#123;projectName&#125; &#123;blank/tabs/sidemenu&#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<ol>
<li><p>專案資料檔案結構 <a href="http://blog.kdchang.cc/2015/02/ionic-note-book-chapter-2-installation.html" target="_blank" rel="external">(參考來源)</a></p>
 <figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">├── bower<span class="class">.json</span>     <span class="comment">// bower dependencies</span></span><br><span class="line">├── config<span class="class">.xml</span>     <span class="comment">// cordova configuration</span></span><br><span class="line">├── gulpfile<span class="class">.js</span>    <span class="comment">// gulp tasks</span></span><br><span class="line">├── hooks          <span class="comment">// custom cordova hooks to execute on specific commands</span></span><br><span class="line">├── ionic<span class="class">.project</span>  <span class="comment">// ionic configuration</span></span><br><span class="line">├── package<span class="class">.json</span>   <span class="comment">// node dependencies</span></span><br><span class="line">├── platforms      <span class="comment">// iOS/Android specific builds will reside here</span></span><br><span class="line">├── plugins        <span class="comment">// where your cordova/ionic plugins will be installed</span></span><br><span class="line">├── scss           <span class="comment">// scss code, which will output to www/css/</span></span><br><span class="line">└── www            <span class="comment">// application - JS code and libs, CSS, images, etc.</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<h4 id="Step4_建立測試平台">Step4 建立測試平台</h4><figure class="highlight scilab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> myApp <span class="comment">//指到專案那個資料夾裡</span></span><br></pre></td></tr></table></figure>
<p>產生測試參數</p>
<figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">ionic <span class="built_in">platform</span> <span class="built_in">add</span> &#123;android/ios&#125;</span><br><span class="line">````	</span><br><span class="line">＊ 注意 **iOS 不能在windows環境下運行**，但依然會幫你建立(建立爽的嗎哈哈)，出錯如下。</span><br><span class="line"></span><br><span class="line">`WARNING: Applications <span class="keyword">for</span> <span class="built_in">platform</span> ios can <span class="operator">not</span> be built <span class="command"><span class="keyword">on</span> <span class="title">this</span> <span class="title">OS</span> - <span class="title">win</span> ...`</span></span><br><span class="line"></span><br><span class="line">＊ 注意 **Android 在兩種環境下皆可運行，但必須安裝JDK (&gt;<span class="number">1.6</span> )與 SDK Manager **</span><br><span class="line"></span><br><span class="line">＊ 注意 ** 若Android在 Mac OS X** 錯誤</span><br><span class="line"></span><br><span class="line">`Error: ERROR : Make sure JAVA_HOME is <span class="built_in">set</span>, <span class="keyword">as</span> well <span class="keyword">as</span> paths <span class="built_in">to</span> your JDK <span class="operator">and</span> JRE <span class="keyword">for</span> java.`</span><br><span class="line"></span><br><span class="line">請可安裝Android開發的IDE（原本Native開發者不用擔心的問題）或執行以下指令</span><br></pre></td></tr></table></figure>
<p>export JAVA_HOME=$(/usr/libexec/java_home)<br><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="preprocessor">#### Step5 執行</span></span><br></pre></td></tr></table></figure></p>
<p>ionic serve //網頁<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></p>
<p>//建立成一個android/ios對應開發專案資料夾<br>ionic build {android/ios}<br>//emulate模擬器; run實機<br> —————– ios實機要用Xcode執行 /android SDK 16up<br>ionic {emulate/run} {android/ios}<br><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">#### Step5 發布</span></span><br><span class="line"></span><br><span class="line">完成了你的作品之後，怎麼把它上傳給其他使用者使用呢。</span><br><span class="line">在上架之前我們必須先把用於 <span class="keyword">debug</span> 的 plugin 移除避免困擾。</span><br></pre></td></tr></table></figure></p>
<p>cordova plugin rm org.apache.cordova.console<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">將我們的 App build 成還沒簽證的 <span class="class">.apk</span> 檔</span><br></pre></td></tr></table></figure></p>
<p>cordova build –release android<br><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">用 JDK 的工具來產生我們簽核用的 <span class="variable">key</span>，若已有自己的 signing <span class="variable">key</span> 可以忽略這個步驟。</span><br></pre></td></tr></table></figure></p>
<p>keytool -genkey -v -keystore my-release-key.keystore -alias alias_name -keyalg RSA -keysize 2048 -validity 10000<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">產生 my-<span class="operator"><span class="keyword">release</span>-<span class="keyword">key</span>.keystore 檔案在目前的資料夾，請妥善保存這個檔案，避免遺失，不然就無法更新 App 啦！</span><br><span class="line"></span><br><span class="line">接著我們用產生或已有的 <span class="keyword">key</span>，將 apk 進行簽核。</span></span><br></pre></td></tr></table></figure></p>
<p>jarsigner -verbose -sigalg SHA1withRSA -digestalg SHA1 -keystore my-release-key.keystore HelloWorld-release-unsigned.apk alias_name<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">簽核完後我們可以使用 APK 優化工具 [<span class="link_label">zip align</span>](<span class="link_url">http://developer.android.com/intl/zh-tw/tools/help/zipalign.html</span>)，優化後產生 HelloWorld.apk 的檔案。</span><br></pre></td></tr></table></figure></p>
<p>zipalign -v 4 HelloWorld-release-unsigned.apk HelloWorld.apk<br><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">若是之後想更新 App，記得更新 platforms/android/AndroidManifest.xml 中的 android:versionCode 版本值並再次提交你的 .apk 檔案。</span><br><span class="line"></span><br><span class="line"><span class="comment">#### 疑難雜症</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">*</span><span class="keyword">*</span>node.js問題<span class="keyword">*</span><span class="keyword">*</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">*</span><span class="keyword">*</span>Android 模擬器(Genymotion)注意事項<span class="keyword">*</span><span class="keyword">*</span></span><br><span class="line"></span><br><span class="line">大家都知道 Android 模擬器（AVD）在運行速度慢且無法代表真實的設備，若要使用虛擬機的話（常用 Genymotion 替代，它會在你的電腦中將 Android 設備當做一個虛擬機來運行），因為 Genymotion 被視為電腦的物理設備，因此使用 Genymotion 的話將使用`ionic run` 而非 ionic emulate。</span><br><span class="line"></span><br><span class="line"><span class="keyword">*</span><span class="keyword">*</span>偵測實機問題<span class="keyword">*</span><span class="keyword">*</span> </span><br><span class="line"></span><br><span class="line">依序執行以下三種指令</span><br></pre></td></tr></table></figure></p>
<p>adb kill-server<br>adb start-server<br>adb devices<br><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">**Android 執行版本問題**</span><br><span class="line"></span><br><span class="line"><span class="escape">`E</span>rror<span class="escape">` </span></span><br><span class="line"></span><br><span class="line"><span class="escape">`1</span>.<span class="string">"SDK Platform"</span> for android-<span class="number">23</span><span class="escape">`</span><br><span class="line"></span></span><br><span class="line"><span class="escape">`2</span>.Lastest <span class="string">"Android SDK Platform-tool"</span><span class="escape">` </span></span><br><span class="line"></span><br><span class="line"><span class="escape">`3</span>.Lastest <span class="string">"Android SDK Build-tools"</span><span class="escape">`</span><br><span class="line"></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Mac OS X /Linux 在 ~/.bash_profile 文件最後加入以下指令&lt;!?&gt;</span><br></pre></td></tr></table></figure></p>
<p>export ANDROID_HOME=/Users/your_user_name/android-sdks<br>export PATH=${PATH}:$ANDROID_HOME/tools:$ANDROID_HOME/platform-tools<br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="title">Windows</span> 環境變數設制</span><br></pre></td></tr></table></figure></p>
<p>// android-sdks位置<br>set ANDROID_HOME=C:\<installation location="">\android-sdk-windows<br>set PATH=%PATH%;%ANDROID_HOME%\tools;%ANDROID_HOME%\platform-tools<br>````</installation></p>
<h6 id="參考來源">參考來源</h6><p>Full-Stack Engineering系列文章</p>
<ol>
<li><a href="http://blog.kdchang.cc/2015/02/ionic-note-ionic-book-chapter-1-all-about-ionic.html" target="_blank" rel="external">Full-Stack Engineering: [Ionic 初心者筆記] 官方教學 - Ch 1 關於 Ionic</a></li>
<li><a href="http://blog.kdchang.cc/2015/02/ionic-note-book-chapter-2-installation.html" target="_blank" rel="external">Full-Stack Engineering: [Ionic 初心者筆記] 官方教學 - Ch 2 安裝</a></li>
<li><a href="http://blog.kdchang.cc/2015/02/ionic-note-book-chapter-3-start-your-ionic-mobile-app.html" target="_blank" rel="external">Full-Stack Engineering: [Ionic 初心者筆記] 官方教學 - Ch 3 開始第一個 Ionic Mobile App</a></li>
<li><a href="http://blog.kdchang.cc/2015/02/ionic-note-book-chapter-4-test-your-ionic-mobile-app.html" target="_blank" rel="external">Full-Stack Engineering: [Ionic 初心者筆記] 官方教學 - Ch 4 測試你的 Ionic Mobile App</a></li>
<li><a href="http://blog.kdchang.cc/2015/02/ionic-note-book-chapter-5-build-out-your-ionic-mobile-app.html" target="_blank" rel="external">Full-Stack Engineering: [Ionic 初心者筆記] 官方教學 - Ch 5 擴展你 App 的功能</a></li>
<li><a href="http://blog.kdchang.cc/2015/02/ionic-note-book-chapter-6-publish-your-app.html" target="_blank" rel="external">Full-Stack Engineering: [Ionic 初心者筆記] 官方教學 - Ch 6 發佈/上架你的 App</a></li>
</ol>
<p>其他</p>
<ol>
<li><a href="http://ionic.io/" target="_blank" rel="external">ionic 官方網站</a></li>
<li><a href="http://ionicframework.com/getting-started/" target="_blank" rel="external">ionic 官方網站-getting-started</a></li>
<li><a href="http://learn.ionicframework.com/videos/windows-android/" target="_blank" rel="external">Installing Cordova and the Android SDK on Windows 7 and 8 | Videos | Learn Ionic</a></li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="前言">前言</h3><p>一般我們所知的手機作業系統，以最大宗來說，iOS與Android為主要兩大市場，當然也有windows phone等等其他作業系統，這些相互獨立的市場，開發條件與方式當然截然不同。</p>
<p>想要成為一個行動裝置軟體開發者，首先你要]]>
    </summary>
    
      <category term="ionic" scheme="http://yoursite.com/tags/ionic/"/>
    
      <category term="MobileEngineer" scheme="http://yoursite.com/categories/MobileEngineer/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[\Android/ Android Studio 基本使用技巧 － System Log使用]]></title>
    <link href="http://yoursite.com/2015/11/25/Android-AndroidStudio-SystemLog/"/>
    <id>http://yoursite.com/2015/11/25/Android-AndroidStudio-SystemLog/</id>
    <published>2015-11-25T02:50:20.000Z</published>
    <updated>2015-11-25T02:52:08.000Z</updated>
    <content type="html"><![CDATA[<h3 id="前言">前言</h3><p>系統日誌(System Log)可幫助顯示系統信息，同時幫助Debug應用程序。如果要使用系統日誌來Debug你的應用程序，在程式碼內寫入<strong>Log程式碼</strong>，並輸出表達異常情況的字串，來幫助除錯。</p>
<h3 id="實作範例">實作範例</h3><p>增加日誌訊息使用</p>
<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> android . util . <span class="type">Log</span> ; </span><br><span class="line">... </span><br><span class="line">public  <span class="class"><span class="keyword">class</span>  <span class="title">MyActivity</span>  <span class="keyword"><span class="keyword">extends</span></span>  <span class="title">Activity</span>  &#123;</span> </span><br><span class="line">    <span class="keyword">private</span>  static  <span class="keyword">final</span>  <span class="type">String</span> <span class="type">TAG</span> =  <span class="type">MyActivity</span> . <span class="class"><span class="keyword">class</span> . <span class="title">getSimpleName</span> (</span>); </span><br><span class="line">    ... </span><br><span class="line">    <span class="annotation">@Override</span> </span><br><span class="line">    public  void onCreate ( <span class="type">Bundle</span> savedInstanceState )  &#123; </span><br><span class="line">        <span class="keyword">if</span>  ( savedInstanceState !=  <span class="literal">null</span> )  &#123; </span><br><span class="line">            <span class="type">Log</span> . d ( <span class="type">TAG</span> ,  <span class="string">"onCreate() Restoring previous state"</span> ); </span><br><span class="line">            <span class="comment">/* restore state */</span> </span><br><span class="line">        &#125;  <span class="keyword">else</span>  &#123; </span><br><span class="line">            <span class="type">Log</span> . d ( <span class="type">TAG</span> ,  <span class="string">"onCreate() No saved state available"</span> ); </span><br><span class="line">            <span class="comment">/* initialize app */</span> </span><br><span class="line">        &#125; </span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>錯誤訊息e 寫入日誌</p>
<figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">someOtherMethod</span> <span class="params">()</span>  </span>&#123; </span><br><span class="line">    <span class="keyword">try</span>  &#123; </span><br><span class="line">        ... </span><br><span class="line">    &#125;  <span class="keyword">catch</span>  ( SomeException e )  &#123; </span><br><span class="line">        Log . d ( TAG ,  <span class="string">"someOtherMethod()"</span> , e ); </span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>於DDMS查看日誌內容<br><img src="http://developer.android.com/images/tools/as-ddmslog.png" alt="DDMS"></p>
<h6 id="參考來源">參考來源</h6><ol>
<li><a href="http://developer.android.com/intl/zh-tw/tools/debugging/debugging-studio.html" target="_blank" rel="external">Debugging with Android Studio | Android Developers</a></li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="前言">前言</h3><p>系統日誌(System Log)可幫助顯示系統信息，同時幫助Debug應用程序。如果要使用系統日誌來Debug你的應用程序，在程式碼內寫入<strong>Log程式碼</strong>，並輸出表達異常情況的字串，來幫助除錯。</p>
<]]>
    </summary>
    
      <category term="Android" scheme="http://yoursite.com/tags/Android/"/>
    
      <category term="System Log" scheme="http://yoursite.com/tags/System-Log/"/>
    
      <category term="MobileEngineer" scheme="http://yoursite.com/categories/MobileEngineer/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[\Android/ Android Studio 基本使用技巧 － Debug使用]]></title>
    <link href="http://yoursite.com/2015/11/25/Android-AndroidStudio-Debug/"/>
    <id>http://yoursite.com/2015/11/25/Android-AndroidStudio-Debug/</id>
    <published>2015-11-25T02:30:20.000Z</published>
    <updated>2015-11-25T03:55:02.000Z</updated>
    <content type="html"><![CDATA[<h3 id="前言">前言</h3><p>利用Android Studio您可以：</p>
<ul>
<li>選擇一個模擬器或Android設備來測試應用程序。</li>
<li>查看系統日誌。</li>
<li>設置中斷點。</li>
<li>測試時檢查變數、運算表達式。</li>
<li>進行Debug。</li>
<li>對應用程序畫面做截圖或錄影。</li>
</ul>
<p>要Debug你的應用程序，Android Studio生成你的應用程序的可Debug版本，連接到設備或模擬器，安裝應用程序並運行它。<strong>IDE</strong>將顯示系統日誌，而你的應用程序正在運行，並提供調試工具來過濾日誌消息，中斷點工作，並控制執行流程。</p>
<h3 id="步驟實作">步驟實作</h3><p><strong>step 1</strong><br>在AndroidStudio中打開專案</p>
<p><strong>step 2</strong><br>點擊工具欄上的Debug圖示<img src="http://developer.android.com/images/tools/as-debugbutton.png" alt="Debug icon">（小昆蟲）。</p>
<p><strong>step 3</strong><br>在Choose Device的視窗，選擇一個設備（或啟動）模擬器。<br><img src="http://developer.android.com/images/tools/as-debugdevices.png" alt="Debug icon"></p>
<p><strong>step 4</strong><br>AndroidStudio將打開Debug工具視窗<img src="http://developer.android.com/images/tools/as-debugwindowbutton.png" alt="Debug belowicon">。</p>
<ul>
<li><strong>Debugger</strong> : 顯示線程（threads）和變數（variables）</li>
<li><strong>Console</strong> : 顯示設備狀態</li>
<li><strong>logcat</strong> : 顯示系統日誌(System Log)</li>
</ul>
<p><img src="http://developer.android.com/images/tools/as-debugview.png" alt="Debug工具視窗"></p>
<h6 id="參考來源">參考來源</h6><ol>
<li><a href="http://developer.android.com/intl/zh-tw/tools/debugging/debugging-studio.html" target="_blank" rel="external">Debugging with Android Studio | Android Developers</a></li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="前言">前言</h3><p>利用Android Studio您可以：</p>
<ul>
<li>選擇一個模擬器或Android設備來測試應用程序。</li>
<li>查看系統日誌。</li>
<li>設置中斷點。</li>
<li>測試時檢查變數、運算表達式。</]]>
    </summary>
    
      <category term="Android" scheme="http://yoursite.com/tags/Android/"/>
    
      <category term="Android Studio" scheme="http://yoursite.com/tags/Android-Studio/"/>
    
      <category term="MobileEngineer" scheme="http://yoursite.com/categories/MobileEngineer/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[\Android/ Parse架站]]></title>
    <link href="http://yoursite.com/2015/11/24/Android-Parse/"/>
    <id>http://yoursite.com/2015/11/24/Android-Parse/</id>
    <published>2015-11-24T02:30:20.000Z</published>
    <updated>2016-01-30T02:26:01.000Z</updated>
    <content type="html"><![CDATA[<h3 id="前言">前言</h3><p>Parse </p>
<p>要關閉了ＱＱ</p>
<p><a href="https://medium.com/@Appletone/%E9%97%9C%E6%96%BC-parse-%E6%9C%8D%E5%8B%99%E6%BA%96%E5%82%99%E9%97%9C%E6%8E%89%E7%9A%84%E4%B8%80%E4%BA%9B%E5%9B%A0%E6%87%89%E6%8E%AA%E6%96%BD-77d430d6d8a5#.5n2t3g73p" target="_blank" rel="external">關於 Parse 服務準備關掉的一些因應措施</a></p>
<h3 id="實作">實作</h3><p><strong>step 1</strong><br><a href="https://parse.com/" target="_blank" rel="external">註冊Parse</a></p>
<p><strong>step 2</strong><br><a href="https://parse.com/apps/quickstart#parse_data/mobile/android/native/new" target="_blank" rel="external">Parse Andorid QuickStart</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="前言">前言</h3><p>Parse </p>
<p>要關閉了ＱＱ</p>
<p><a href="https://medium.com/@Appletone/%E9%97%9C%E6%96%BC-parse-%E6%9C%8D%E5%8B%99%E6%BA%9]]>
    </summary>
    
      <category term="Android" scheme="http://yoursite.com/tags/Android/"/>
    
      <category term="Parse" scheme="http://yoursite.com/tags/Parse/"/>
    
      <category term="MobileEngineer" scheme="http://yoursite.com/categories/MobileEngineer/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[\Android/ Gradle]]></title>
    <link href="http://yoursite.com/2015/11/24/Android-Gradle/"/>
    <id>http://yoursite.com/2015/11/24/Android-Gradle/</id>
    <published>2015-11-24T02:30:20.000Z</published>
    <updated>2016-01-30T07:54:34.000Z</updated>
    <content type="html"><![CDATA[<h3 id="前言">前言</h3><p>Gradle </p>
<p>自動化編譯工具為 Ant , Maven ,Gradle</p>
<p>Ant -&gt; <a href="http://www.codedata.com.tw/java/understanding-gradle-1-ant/" target="_blank" rel="external">【認識 Gradle】（1）講古的時間 Apache Ant | CodeData</a></p>
<p>提供一組 XML 標籤，讓你定義一個『專案（project）』內要提供哪些『目標(target)』，在目標內需要描述有哪些『任務（task）』需要被執行。簡而言之，Ant 讓你用 XML 的方式描述一些自動化編譯的事項，就如同撰寫程式語言一般。說到程式語言不外乎，語法、語意與函式，若將上述概念轉換成 Ant 的領域，則為 XML、DataType、Properties、Task。</p>
<p>Maven -&gt; <a href="http://www.codedata.com.tw/java/understanding-gradle-2-maven/" target="_blank" rel="external">【認識 Gradle】（2）講古的時間 Apache Maven by qrtt1 | CodeData</a></p>
<p>Maven 被創造出來的動機有二個主要原因：</p>
<ol>
<li>Java 專案的標準化</li>
<li>Java 專案函式庫管理的問題</li>
</ol>
<p>Gradle -&gt; <a href="http://siwei.me/blog/posts/gradle-why-gradle-but-not-ant-maven-ivy" target="_blank" rel="external">為什麼要用Gradle? - 申思維的技術站點  | CodeData</a></p>
<p>ANT的缺點：</p>
<p>很容易變臃腫。雖然ANT 提倡大家寫個MODULE出來，但是大部分人都不會這樣做。基本都喜歡把所有內容都寫在build.xml中</p>
<p>MAVEN的缺點：</p>
<p>比較精簡，但是無法定制化。在MAVEN中，想要定制，必須得寫個plugin 或者做些hack， 無法像ANT那樣靈活。可以說走了與ANT相反的極端。</p>
<p>ANT和MAVEN共同的缺點：</p>
<p>都很複雜。XML 在2000年還是很炫酷的，但是到了現在就是喳喳。。。寫起來麻煩。</p>
<p>Gradle 把兩者的優點結合到了一起。</p>
<p>比ant 語法經驗， 比MAVEN靈活。可以自由定制。</p>
<h3 id="檔案架構">檔案架構</h3><p><a href="http://www.codedata.com.tw/java/understanding-gradle-3-getting-started/" target="_blank" rel="external">【認識 Gradle】（3）Gradle 起手式 by qrtt1 | CodeData</a></p>
<p>範例一 java project</p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 引用 java plugin 獲得編譯 java 專案相關的 task $ */</span></span><br><span class="line">apply <span class="string">plugin:</span> <span class="string">'java'</span> </span><br><span class="line"><span class="comment">/* 引用 application plugin 獲得執行 java 專案相關的 task $ */</span></span><br><span class="line">apply <span class="string">plugin:</span><span class="string">'application'</span></span><br><span class="line"><span class="comment">/* 執行 application plugin 用到的參數 $ */</span></span><br><span class="line">mainClassName = <span class="string">"tw.com.codedata.HelloWorld"</span></span><br><span class="line"><span class="comment">/* 設定 maven repository server $ */</span></span><br><span class="line">repositories &#123;</span><br><span class="line">   	mavenCentral()</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 宣告專案的相依函式庫 $ */</span></span><br><span class="line">dependencies &#123;</span><br><span class="line">   	compile <span class="string">group:</span> <span class="string">'commons-logging'</span>, <span class="string">name:</span> <span class="string">'commons-logging'</span>, <span class="string">version:</span> <span class="string">'1.1.1'</span></span><br><span class="line">   	compile <span class="string">group:</span> <span class="string">'log4j'</span>, <span class="string">name:</span> <span class="string">'log4j'</span>, <span class="string">version:</span> <span class="string">'1.2.16'</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>範例二 android project</p>
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 引用 java plugin 獲得編譯 android 專案相關的 task  */</span></span><br><span class="line">apply plugin: <span class="string">'com.android.application'</span></span><br><span class="line"><span class="comment">/* 設定 android SDK 目標版本 要和“com.android...”下方同一版本  */</span></span><br><span class="line">android &#123;</span><br><span class="line">   	compileSdkVersion <span class="number">23</span> </span><br><span class="line">   	buildToolsVersion <span class="string">"23.0.1"</span></span><br><span class="line"><span class="comment">/* 設定 android SDK 最小資源版本 */</span></span><br><span class="line">   defaultConfig &#123;</span><br><span class="line">       applicationId <span class="string">"com.ftc.ec"</span></span><br><span class="line">       minSdkVersion  <span class="number">14</span></span><br><span class="line">       targetSdkVersion <span class="number">23</span></span><br><span class="line">       versionCode <span class="number">1</span></span><br><span class="line">       versionName <span class="string">"1.0"</span></span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">/*    */</span></span><br><span class="line">   buildTypes &#123;</span><br><span class="line">       release &#123;</span><br><span class="line">           minifyEnabled <span class="keyword">false</span></span><br><span class="line">           proguardFiles getDefaultProguardFile(<span class="string">'proguard-android.txt'</span>), <span class="string">'proguard-rules.txt'</span></span><br><span class="line">       	&#125;</span><br><span class="line">   	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 宣告專案的相依函式庫 */</span></span><br><span class="line"><span class="keyword">dependencies</span> &#123;</span><br><span class="line">	<span class="comment">//-- project</span></span><br><span class="line">   	<span class="keyword">compile</span> <span class="keyword">project</span>(<span class="string">':chachalibrary'</span>)</span><br><span class="line">   	<span class="comment">//-- 線上jar檔</span></span><br><span class="line">   	<span class="keyword">compile</span> <span class="string">'com.android.support:appcompat-v7:23.1.1'</span></span><br><span class="line">   	<span class="comment">//-- local jar檔</span></span><br><span class="line">	<span class="keyword">compile</span> <span class="keyword">fileTree</span>(dir: <span class="string">'libs'</span>, <span class="keyword">include</span>: [<span class="string">'*.jar'</span>])</span><br><span class="line">  		<span class="keyword">compile</span> files(<span class="string">'libs/ormlite-core-4.48.jar'</span>)</span><br><span class="line">   	...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h6 id="參考來源">參考來源</h6><p>CodeData系列文章</p>
<ol>
<li><a href="http://www.codedata.com.tw/java/understanding-gradle-1-ant/" target="_blank" rel="external">【認識 Gradle】（1）講古的時間 Apache Ant | CodeData</a></li>
<li><a href="http://www.codedata.com.tw/java/understanding-gradle-2-maven/" target="_blank" rel="external">【認識 Gradle】（2）講古的時間 Apache Maven by qrtt1 | CodeData</a></li>
<li><a href="http://www.codedata.com.tw/java/understanding-gradle-3-getting-started/" target="_blank" rel="external">【認識 Gradle】（3）Gradle 起手式 by qrtt1 | CodeData</a></li>
<li><a href="http://www.codedata.com.tw/java/understanding-gradle-4-gradle-script/" target="_blank" rel="external">【認識 Gradle】（4）看懂 Gradle Script by qrtt1 | CodeData</a></li>
<li><a href="http://www.codedata.com.tw/java/understanding-gradle-2-maven/" target="_blank" rel="external">【認識 Gradle】（5）Gradle Task 觀念導讀 | CodeData</a></li>
<li><a href="http://www.codedata.com.tw/java/understanding-gradle-4-java-project-build-script-customization/" target="_blank" rel="external">【認識 Gradle】（6）Java 專案與 Build Script 客製化 | CodeData</a></li>
<li><a href="http://www.codedata.com.tw/java/understanding-gradle-7-java-project-dependencies/" target="_blank" rel="external">【認識 Gradle】（7）Java 專案相依管理 | CodeData</a></li>
</ol>
<p>其他</p>
<ol>
<li><a href="http://polinwei.blogspot.tw/2008/07/ant.html" target="_blank" rel="external">我與小崴崴的工作日記: [教學] ANT 的基本介紹</a></li>
<li><a href="http://www.cnblogs.com/luotaoyeah/p/3764533.html" target="_blank" rel="external">Maven入門指南① ：Maven 快速入門及簡單使用- 羅韜- 博客園</a></li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="前言">前言</h3><p>Gradle </p>
<p>自動化編譯工具為 Ant , Maven ,Gradle</p>
<p>Ant -&gt; <a href="http://www.codedata.com.tw/java/understanding-gr]]>
    </summary>
    
      <category term="Android" scheme="http://yoursite.com/tags/Android/"/>
    
      <category term="Gradle" scheme="http://yoursite.com/tags/Gradle/"/>
    
      <category term="MobileEngineer" scheme="http://yoursite.com/categories/MobileEngineer/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[\Android/ Recyclerview]]></title>
    <link href="http://yoursite.com/2015/10/28/Android-Recycleview/"/>
    <id>http://yoursite.com/2015/10/28/Android-Recycleview/</id>
    <published>2015-10-28T02:49:25.000Z</published>
    <updated>2016-02-02T07:41:48.000Z</updated>
    <content type="html"><![CDATA[<h3 id="前言">前言</h3><p>RecyclerView 為 v7 的新部件，可替代 ListView 使用，標準化了 ViewHolder 類似於 ListView 中 convertView。</p>
<p>RecyclerView 快速實現 listview 、 gridview 、瀑布流的效果，而且還可以設置橫向和縱向顯示，添加動畫效果也非常簡單(自帶了 ItemAnimation ，可以設置加載和移除時的動畫，方便做出各種動態瀏覽的效果)</p>
<p>以下是Google在對於RecyclerView的描述</p>
<p><code>A flexible view for providing a limited window into a large data set.</code> </p>
<p>以下是它的新特性：</p>
<ul>
<li>分離出數據顯示相關的所有問題，只關注View的回收和復用</li>
<li>對數據的顯示、動畫的配置進行高度解耦，提供了插拔式的體驗</li>
<li>強制使用ViewHolder模式，消除不必要的Layout Resource查找時間內置添加和移除動畫</li>
</ul>
<h3 id="實作">實作</h3><h4 id="gradle_compile">gradle compile</h4><p>在build.gradle(app)內加入recyclerview和cardview的引用</p>
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">compile</span> <span class="string">'com.android.support:recyclerview-v7:23.0.+'</span></span><br><span class="line"><span class="keyword">compile</span> <span class="string">'com.android.support:cardview-v7:23.0.+'</span></span><br></pre></td></tr></table></figure>
<h3 id="生命週期">生命週期</h3><ul>
<li><strong>getItemViewType</strong>：獲取View類型</li>
<li><strong>onCreateViewHolder</strong>：創建ViewHolder</li>
<li><strong>ViewHolderonViewAttac.bhedToWindow</strong>：當It​​em可見時調用</li>
<li><strong>onBindViewHolder</strong>：綁定數據以及邏輯控製樣式</li>
<li><strong>onViewDetachedFromWindow：Item</strong>不可見時調用</li>
<li><strong>onViewRecycled：Item</strong>被回收時調用</li>
</ul>
<h6 id="參考來源">參考來源</h6><ol>
<li><a href="http://frank-zhu.github.io/android/2015/01/16/android-recyclerview-part-1/" target="_blank" rel="external">RecyclerView使用详解（一） · Frank-Zhu</a></li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="前言">前言</h3><p>RecyclerView 為 v7 的新部件，可替代 ListView 使用，標準化了 ViewHolder 類似於 ListView 中 convertView。</p>
<p>RecyclerView 快速實現 listview 、]]>
    </summary>
    
      <category term="Android" scheme="http://yoursite.com/tags/Android/"/>
    
      <category term="RecyclerView" scheme="http://yoursite.com/tags/RecyclerView/"/>
    
      <category term="MobileEngineer" scheme="http://yoursite.com/categories/MobileEngineer/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[\Android/ intent]]></title>
    <link href="http://yoursite.com/2015/10/28/Android-Intent/"/>
    <id>http://yoursite.com/2015/10/28/Android-Intent/</id>
    <published>2015-10-28T02:49:25.000Z</published>
    <updated>2016-01-30T02:22:39.000Z</updated>
    <content type="html"><![CDATA[<h3 id="intent">intent</h3><p><strong>目的,意圖</strong>,意義,含義(a.)熱心的,專心致志的</p>
<h3 id="Android_intent">Android intent</h3><p>在Android來說，intent是常用到的方法，導頁好幫手，主要幫助我們在傳值、轉化畫面等等，像是<strong>意圖辦到什麼目的，前往哪個目的地的概念</strong></p>
<p>但除了導頁功能之外，intent能做到的事情不只這些唷，先以導頁做舉例與方法使用說明 …</p>
<p>intent分為兩種：顯式(Explicit intent)和隱式(Implicit intent)。</p>
<p>假設今日我們要從FirstActivity.class轉換到GoalActivity.class</p>
<h4 id="1-_顯示(Explicit)">1. 顯示(Explicit)</h4><p>直接指定<strong>確定</strong>要<strong>一個</strong>轉換的目標Activity，意圖明顯，所以稱為顯示意圖(Explicit intent)。<strong>常用於應用程式內部頁面之間轉換之用。</strong></p>
<p>例如，在FirstActivity.java指定需要轉換到GoalActivity.java，直接在FirstActivity.java正確位置寫上下面程式碼。很多種可替代的寫法，所以選自己習慣的寫法就行囉！</p>
<figure class="highlight fortran"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">//<span class="number">1.</span> 目標Activity可直接以package.<span class="keyword">class</span>路徑表示。</span><br><span class="line"><span class="type">Intent</span> <span class="type">intent</span> = new <span class="type">Intent</span>(FirstActivity.<span class="keyword">class</span>,<span class="string">"com.bird.intenttext.GoalActivity"</span>)</span><br><span class="line">startActivity(<span class="type">intent</span>); 		</span><br><span class="line">//<span class="number">2.</span> 目標Activity簡化表示</span><br><span class="line"><span class="type">Intent</span> <span class="type">intent</span> = new <span class="type">Intent</span>(FirstActivity.<span class="keyword">class</span>,  GoalActivity.<span class="keyword">class</span>)</span><br><span class="line">startActivity(<span class="type">intent</span>); </span><br><span class="line">//<span class="number">3.</span> this 取代 FirstActivity.<span class="keyword">class</span></span><br><span class="line"><span class="type">Intent</span> <span class="type">intent</span> = new <span class="type">Intent</span>(this,  GoalActivity.<span class="keyword">class</span>)</span><br><span class="line">startActivity(<span class="type">intent</span>); </span><br><span class="line">//<span class="number">4.</span> setComponent：ComponentName取代</span><br><span class="line">ComponentName CPName = new ComponentName(this,  GoalActivity.<span class="keyword">class</span>);  </span><br><span class="line"><span class="type">Intent</span> <span class="type">intent</span> = new <span class="type">Intent</span>();  </span><br><span class="line"><span class="type">intent</span>.setComponent(CPName);  </span><br><span class="line">startActivity(<span class="type">intent</span>);</span><br><span class="line">//<span class="number">5.</span> setClass：ClassName取代</span><br><span class="line"><span class="type">Intent</span> <span class="type">intent</span> = new <span class="type">Intent</span>();</span><br><span class="line"><span class="type">intent</span>.setClassName(this,  GoalActivity.<span class="keyword">class</span>);</span><br><span class="line">startActivity(<span class="type">intent</span>);</span><br></pre></td></tr></table></figure>
<h6 id="<!-￼1->"><figure class="highlight"><figcaption><span>最後一定要記得在 AndroidManifest.xml 文件中＜application＞＜/application＞ 之中，註冊欲前往的目標Activity。</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#10;&#31684;&#20363;&#22914;&#19979;</span><br></pre></td></tr></table></figure></h6><pre><code><span class="tag">&lt;<span class="title">activity</span> <span class="attribute">android:name</span>=<span class="value">"com.bird.intenttext.GoalActivity"</span>
            <span class="attribute">...</span>&gt;</span>
    <span class="tag">&lt;<span class="title">intent-filter</span>&gt;</span>
        <span class="tag">&lt;<span class="title">action</span> <span class="attribute">...</span>/&gt;</span>
        <span class="tag">&lt;<span class="title">category</span> <span class="attribute">...</span>/&gt;</span>
        <span class="tag">&lt;<span class="title">data</span> <span class="attribute">...</span>/&gt;</span>
    <span class="tag">&lt;/<span class="title">intent-filter</span>&gt;</span>
    <span class="tag">&lt;<span class="title">meta-data</span> <span class="attribute">...</span>/&gt;</span>
<span class="tag">&lt;/<span class="title">activity</span>&gt;</span> 
</code></pre><figure class="highlight fortran"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">#### <span class="number">2.</span> 隱示(<span class="type">Implicit</span> <span class="type">intent</span>)</span><br><span class="line"></span><br><span class="line">相對顯示來說，隱示就是**間接指定**囉！就是讓系统幫你篩選出適合的目標Activity，根據&lt;<span class="type">intent</span>-filter&gt;来篩選。透過AndroidManifest.xml文件幫助我們完成這件事情。</span><br><span class="line"></span><br><span class="line">舉例來說，在AndroidManifest.xml文件中，註冊欲前往的目標Activity時，將內容修改內容如下：</span><br></pre></td></tr></table></figure>
<pre><code><span class="tag">&lt;<span class="title">activity</span>
    <span class="attribute">android:name</span>=<span class="value">"com.bird.intenttext.GoalActivity"</span>&gt;</span>
    <span class="tag">&lt;<span class="title">intent-filter</span>&gt;</span>
        //可自訂android:name字串內容
        <span class="tag">&lt;<span class="title">action</span> <span class="attribute">android:name</span>=<span class="value">"com.bird.intenttext.GotoGoalActivity"</span>/&gt;</span> 
        <span class="tag">&lt;<span class="title">category</span> <span class="attribute">android:name</span>=<span class="value">"android.intent.category.DEFAULT"</span>/&gt;</span>
    <span class="tag">&lt;/<span class="title">intent-filter</span>&gt;</span>
<span class="tag">&lt;/<span class="title">activity</span>&gt;</span>
</code></pre><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">在<span class="tag">FirstActivity</span><span class="class">.java</span>指定需要轉換到<span class="tag">GoalActivity</span><span class="class">.java</span>，直接在<span class="tag">FirstActivity</span><span class="class">.java</span>正確位置寫上下面程式碼。</span><br></pre></td></tr></table></figure>
<pre><code><span class="type">Intent</span> <span class="type">intent</span> = new <span class="type">Intent</span>(<span class="string">"GotoGoalActivity"</span>);
startActivity(<span class="type">intent</span>); 
// or 將Activity定義為<span class="keyword">Action</span>，使用setAction
<span class="type">Intent</span> <span class="type">intent</span> = new <span class="type">Intent</span>();  
<span class="type">intent</span>.setAction(<span class="string">"com.bird.intenttext.GotoGoalActivity"</span>);  
startActivity(<span class="type">intent</span>);
</code></pre><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">##### 外部轉換</span></span><br><span class="line"></span><br><span class="line">另外，隱示最厲害的地方就是用於<span class="keyword">*</span><span class="keyword">*</span>與外部應用程式間的Activity轉換<span class="keyword">*</span><span class="keyword">*</span>，讓</span><br><span class="line">透過設置<span class="keyword">*</span><span class="keyword">*</span>Action<span class="keyword">*</span><span class="keyword">*</span>，表明自己的意圖，由系統解析，找到能夠處理這個Intent的Activity並啟動。</span><br><span class="line"></span><br><span class="line">例如</span><br><span class="line"></span><br><span class="line">`<span class="string">"android.intent.action.DIAL"</span>`: 表示當你有撥打電話的意圖時，系統會呼叫Activity該讓使用者選擇使用。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">範例1：表示GoalActivity有撥打電話的功能意圖可被呼叫</span><br></pre></td></tr></table></figure>
<pre><code><span class="tag">&lt;<span class="title">activity</span>
    <span class="attribute">android:name</span>=<span class="value">"com.bird.intenttext.GoalActivity"</span>&gt;</span>
    <span class="tag">&lt;<span class="title">intent-filter</span>&gt;</span>
        //可自訂android:name字串內容: 建議將其完整命名package.class
        <span class="tag">&lt;<span class="title">action</span> <span class="attribute">android:name</span>=<span class="value">"android.intent.action.DIAL"</span>/&gt;</span> 
        <span class="tag">&lt;<span class="title">category</span> <span class="attribute">android:name</span>=<span class="value">"android.intent.category.DEFAULT"</span>/&gt;</span>
    <span class="tag">&lt;/<span class="title">intent-filter</span>&gt;</span>
<span class="tag">&lt;/<span class="title">activity</span>&gt;</span>
</code></pre><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">範例<span class="number">2</span>：該Activity需呼叫別的意圖功能</span><br></pre></td></tr></table></figure>
<pre><code><span class="type">Intent</span> <span class="type">intent</span> = new <span class="type">Intent</span>(<span class="type">Intent</span>.ACTION_DIAL);  
// 或者<span class="type">Intent</span> <span class="type">intent</span> = new <span class="type">Intent</span>(<span class="string">"android.intent.action.DIAL"</span>);
startActivity(<span class="type">intent</span>);
</code></pre><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="preprocessor">#### 安全機制</span></span><br><span class="line"></span><br><span class="line">有時候會因為AndroidManifest.xml中忘記註冊或字串打錯等原因，找不到對應的Activity，便會拋出ActivityNotFoundException的錯誤訊息，為防止App出錯關閉無法運行，因此我們要設立對應的安全機制。</span><br><span class="line"></span><br><span class="line">方法<span class="number">1</span>：<span class="keyword">try</span> <span class="keyword">catch</span></span><br></pre></td></tr></table></figure>
<pre><code>Intent intent = <span class="keyword">new</span> Intent(<span class="string">"GotoGoalActivity"</span>);
<span class="keyword">try</span>{
    startActivity(intent); 
}<span class="keyword">catch</span>(ActivityNotFoundException e){
     Toast.makeText(<span class="keyword">this</span>, <span class="string">"找不到对应的Activity"</span>, Toast.LENGTH_SHORT).show();  
}
</code></pre><figure class="highlight fortran"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">方法<span class="number">2</span>：使用<span class="type">Intent</span>的resolveActivity方法判斷這個<span class="type">Intent</span>是否能找到合適的Activity</span><br></pre></td></tr></table></figure>
<pre><code><span class="type">Intent</span> <span class="type">intent</span> = new <span class="type">Intent</span>(<span class="type">Intent</span>.ACTION_DIAL); 
<span class="keyword">if</span>(<span class="type">intent</span>.resolveActivity(getPackageManager()) == null)  
{  
   // 设置控件不可用   
}
startActivity(<span class="type">intent</span>); 
</code></pre><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">方法<span class="number">3</span>：多個Activity可供選擇的話，則返回的Component是com<span class="class">.android</span><span class="class">.internal</span><span class="class">.app</span><span class="class">.ResolverActivity</span>，也就是用戶選擇Activity的那個界面對應的Activity，這裡不再深究。</span><br></pre></td></tr></table></figure>
<pre><code><span class="type">Intent</span> <span class="type">intent</span> = new <span class="type">Intent</span>(<span class="type">Intent</span>.ACTION_DIAL);  
ComponentName componentName = <span class="type">intent</span>.resolveActivity(getPackageManager());  
<span class="keyword">if</span>(componentName <span class="comment">!= null)  </span>
{  
    String className = componentName.getClassName();  
    Toast.makeText(this, className, Toast.LENGTH_SHORT).show();  
}  
</code></pre><p>````</p>
<h6 id="參考來源">參考來源</h6><ol>
<li><a href="http://blog.csdn.net/xiao__gui/article/details/11392987" target="_blank" rel="external">Android理解：显式和隐式Intent - 叉叉哥的BLOG - 博客频道 - CSDN.NET</a></li>
<li><a href="http://developer.android.com/intl/zh-tw/reference/android/content/Intent.html" target="_blank" rel="external">Android Developrs-intent</a></li>
<li><a href="http://ke.jikexueyuan.com/zhiye/android/" target="_blank" rel="external">Android工程師<em>路徑圖的標題</em>職業路徑圖<em>IT職業在線教育平台</em>極客學院</a></li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="intent">intent</h3><p><strong>目的,意圖</strong>,意義,含義(a.)熱心的,專心致志的</p>
<h3 id="Android_intent">Android intent</h3><p>在Android來說，intent是]]>
    </summary>
    
      <category term="Android" scheme="http://yoursite.com/tags/Android/"/>
    
      <category term="intent" scheme="http://yoursite.com/tags/intent/"/>
    
      <category term="MoGoalileEngineer" scheme="http://yoursite.com/categories/MoGoalileEngineer/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[\Android/ ViewGroup]]></title>
    <link href="http://yoursite.com/2015/10/28/Android-ViewGroup/"/>
    <id>http://yoursite.com/2015/10/28/Android-ViewGroup/</id>
    <published>2015-10-28T01:57:47.000Z</published>
    <updated>2015-11-23T08:04:32.000Z</updated>
    <content type="html"><![CDATA[<h1 id="[Android]_自定義_view">[Android] 自定義 view</h1><h3 id="前言">前言</h3><p>Android開發中，對於自定義 View <a href="https://zh.wikipedia.org/wiki/%E6%8E%A7%E4%BB%B6" target="_blank" rel="external">widget</a>分為兩種</p>
<ul>
<li><p><code>自定義widget (繼承 View class)</code>：<br>需重載兩個操作widget的方法，一個是用來測量尺寸的<strong><a href="http://ticktick.blog.51cto.com/823160/1540134" target="_blank" rel="external">onMeasure()</a></strong>另一個是用來繪製UI的<strong>onDraw()</strong>。</p>
</li>
<li><p><code>自定義佈局容器 （繼承 ViewGroup）</code>：<br>需重載三個操作widget的方法，一個是用來測量尺寸的<strong>onMeasure()</strong>，一個是用佈局子部件的<strong>onLayout()</strong>以及繪製UI的<strong>dispatchDraw()</strong>。</p>
</li>
</ul>
<p>Android View和ViewGroup從組成架構上看，似乎ViewGroup在View之上，View需要繼承ViewGroup，但實際上不是這樣的。<strong>View是基類，ViewGroup是它的子類。</strong>這就證明了一點，View代表了用戶界面組件的一塊可繪製的空間塊。每一個View在屏幕上佔據一個長方形區域。在這個區域內，這個VIEW對象負責圖形繪製和事件處理。View是小控件widgets和ViewGroup的父類。<strong>ViewGroup又是Layout的基類。</strong></p>
<h4 id="ViewGroup的onLayout()方法">ViewGroup的onLayout()方法</h4><p>由於ViewGroup的定位就是一個容器，用來盛放子部件的，所以就必須定義要以什麼的方式來盛放，比如LinearLayout就是以橫向或者縱向順序存放，而RelativeLayout則以相對位置來擺放子控件，同樣，我們的自定義ViewGroup也必須給出我們期望的佈局方式，而這個定義就通過onLayout()函數來實現。</p>
<h6 id="參考來源">參考來源</h6><ol>
<li><a href="http://ticktick.blog.51cto.com/823160/1542200" target="_blank" rel="external">Android開發實踐：自定義ViewGroup的onLayout()分析- 對影成三人- 51CTO技術博客</a></li>
<li><a href="http://acreep.blog.51cto.com/3333560/667431" target="_blank" rel="external">2.1 Android界面View及ViewGroup - 棕櫚燒酒- 51CTO技術博客</a></li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="[Android]_自定義_view">[Android] 自定義 view</h1><h3 id="前言">前言</h3><p>Android開發中，對於自定義 View <a href="https://zh.wikipedia.org/wiki/%E6%8E]]>
    </summary>
    
      <category term="Android" scheme="http://yoursite.com/tags/Android/"/>
    
      <category term="ViewGroup" scheme="http://yoursite.com/tags/ViewGroup/"/>
    
      <category term="MobileEngineer" scheme="http://yoursite.com/categories/MobileEngineer/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[單元測試(Unit Testing)]]></title>
    <link href="http://yoursite.com/2015/10/21/Code-UnitText20151021/"/>
    <id>http://yoursite.com/2015/10/21/Code-UnitText20151021/</id>
    <published>2015-10-21T01:11:58.000Z</published>
    <updated>2016-02-02T07:37:33.000Z</updated>
    <content type="html"><![CDATA[<h4 id="解釋">解釋</h4><p>1987年，IEEE就把單元測試納入美國國家標準。<br>針對應用程式設計的最小單位（程式模組）來進行正確性檢驗的測試工作。<br>理想的測試案例都依循不同案例；經常使用stubs、mock或fake等測試馬甲程式。<br>單元測試通常由軟體開發人員編寫，用於確保他們所寫的代碼符合軟體需求和遵循開發目標。</p>
<h4 id="主要目標">主要目標</h4><p>將應用程式中的最小可測試片段（稱之為單元）與程式碼其餘部分隔離，已確定他的功能是否符合期望。<br>將各單元分開測試，可識別絕大部分的錯誤之處所在。對於物件導向而言，最小單元就是方法，包括<strong><strong>基礎類別（超類）、抽象類、或者衍生類別（子類別）</strong></strong>中的方法。</p>
<h4 id="通用方法">通用方法</h4><p>需要撰寫<strong><strong>驅動程式</strong></strong>和<strong><strong> Stub </strong></strong>。<br>驅動程式模擬呼叫單元，而 Stub 模擬被呼叫的單元。<br>驅動程式和 Stub 需要花費相對應成本。驅動程式和 Stub 可重複使用，因此可經常重新測試，而不必撰寫大量額外的測試程式碼，而且重新測試的成本也比較好控制。</p>
<h4 id="優點">優點</h4><p>然而單元測試仍然提供一些難以拒絕的優點。</p>
<ul>
<li>它允許測試程序自動執行，可幫助我們更容易找出應用程式較複雜的程式片段中所含的錯誤。</li>
<li>因為注意力是集中於各單元，可幫助我們做更全面的測試，涵蓋的範圍通常可以增加。</li>
</ul>
<h4 id="重要觀念">重要觀念</h4><h6 id="＊_目標程式">＊ 目標程式</h6><p>單元測試要測試的程式目標。</p>
<h6 id="＊_單元測試種類">＊ 單元測試種類</h6><ul>
<li><p><a href="https://en.wikipedia.org/wiki/Test-driven_development" target="_blank" rel="external">TDD (Test-Driven Development)</a>：目標程式不存在前撰寫的單元測試。將撰寫程式的流程從原先的寫碼&gt;測試&gt;重構轉變為<strong><strong>測試&gt;寫碼&gt;重構</strong></strong>，先訂定程式目標及規範，避免過度設計，寫出來的程式碼 100% 可以被測試，測試涵蓋率百分百。</p>
</li>
<li><p><a href="https://en.wikipedia.org/wiki/Behavior-driven_development" target="_blank" rel="external">BDD (Behavior-Driven Development)</a>：目標程式已存在後，所撰寫的單元測試。 程式完成後，維護人員針對目標程式介面的初步認知，依循邏輯撰寫單元測試來進行測試，發生錯誤時，可分析是否是程式本身存在的問題，或是維護人員認知錯誤。</p>
</li>
</ul>
<h6 id="＊_JAVA單元測試工具、函式庫">＊ JAVA單元測試工具、函式庫</h6><ol>
<li><a href="http://junit.org/" target="_blank" rel="external">JUnit 4</a></li>
<li><a href="http://code.google.com/p/mockito/" target="_blank" rel="external">Mockito</a></li>
<li><a href="http://easymock.org/" target="_blank" rel="external">EasyMock</a></li>
<li><a href="https://code.google.com/p/powermock/" target="_blank" rel="external">PowerMock</a></li>
</ol>
<h6 id="＊_JUint_參考">＊ JUint 參考</h6><ul>
<li><a href="http://slashlook.com/articles_20140904.html" target="_blank" rel="external">三分鐘學會單元測試（使用JUnit）</a></li>
</ul>
<h6 id="＊_整合單元測試">＊ 整合單元測試</h6><p>若您有兩個單元，並決定將它們合在一起，然後當作整合單元來進行初始測試比較划算，則在許多地方可能會發生錯誤：</p>
<ul>
<li>錯誤導因於單元 1 的缺失嗎？</li>
<li>錯誤導因於單元 2 的缺失嗎？</li>
<li>錯誤導因於這兩個單元的缺失嗎？</li>
<li>錯誤導因於單元之間介面的缺失嗎？</li>
<li>錯誤導因於測試的缺失嗎？</li>
</ul>
<p>找出整合式模組中的錯誤，比先隔離單元、逐一進行測試、整合之後再進行整體測試還要複雜。 </p>
<h6 id="參考來源">參考來源</h6><ol>
<li><a href="https://msdn.microsoft.com/zh-tw/library/aa292197.aspx" target="_blank" rel="external">單元測試-Microsoft Developer Network</a></li>
<li><a href="https://zh.wikipedia.org/wiki/%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95" target="_blank" rel="external">單元測試 - 維基百科，自由的百科全書</a></li>
<li><a href="http://www.codedata.com.tw/java/unit-test-the-way-changes-my-programming" target="_blank" rel="external">【單元測試】改變了我程式設計的思維方式 by pcbill | CodeData</a></li>
<li><a href="http://blog.xuite.net/simonpower/sss/3943610-Java+%E7%A8%8B%E5%BC%8F%E7%9A%84%E5%96%AE%E5%85%83%E6%B8%AC%E8%A9%A6" target="_blank" rel="external">Java 程式的單元測試 @ Simon’s Software Sky :: 隨意窩 Xuite日誌</a></li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<h4 id="解釋">解釋</h4><p>1987年，IEEE就把單元測試納入美國國家標準。<br>針對應用程式設計的最小單位（程式模組）來進行正確性檢驗的測試工作。<br>理想的測試案例都依循不同案例；經常使用stubs、mock或fake等測試馬甲程式。<br>單元測試通常]]>
    </summary>
    
      <category term="單元測試" scheme="http://yoursite.com/tags/%E5%96%AE%E5%85%83%E6%B8%AC%E8%A9%A6/"/>
    
      <category term="Engineer" scheme="http://yoursite.com/categories/Engineer/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[\Android/ Manifest.xml 簡介 & Tag]]></title>
    <link href="http://yoursite.com/2015/10/20/Android-Manifest-inttag/"/>
    <id>http://yoursite.com/2015/10/20/Android-Manifest-inttag/</id>
    <published>2015-10-20T06:59:09.000Z</published>
    <updated>2016-01-30T00:50:06.000Z</updated>
    <content type="html"><![CDATA[<h4 id="簡介說明_:">簡介說明 :</h4><p> 是一個用來描述App的整體資訊設定的XML檔，可向 Android 系統顯示應用程式的基本資訊，也就是系統在執行該應用程式的任何程式碼之前必須具備的資訊。</p>
<h4 id="Manifect-xml_功能_:">Manifect.xml 功能 :</h4><h6 id="Intent_Filters_詳情請配合參閱\Android/_Intent應用">Intent Filters 詳情請配合參閱<a href="https://erinhsu.github.io/2015/10/28/Android-Intent" target="_blank" rel="external">\Android/ Intent應用</a></h6><p>應用程式元件是由 Intent 來啟動，用以指明要執行的活動(activity)與動作(action)。其中包含了活動名稱、所需資料、要執行本活動的元件分類、適當的指令。<strong>activity 程式碼中的 <code>intent</code> 直接指明，優先於 <code>&lt;intent-filter&gt;</code>。</strong></p>
<p><code>&lt;intent-filter&gt;</code>: 表示所能處理的 intent有哪些。</p>
<h6 id="Icons_and_Labels">Icons and Labels</h6><p>其<code>android:icon</code>(圖示) 與<code>android:label</code>(標題) 即是其內所有元素的預設值。</p>
<h6 id="Permissions">Permissions</h6><p>告所需的許可權，用來限制程式與資料的存取，以避免遭到誤用，而產生不良後果。每個許可權的識別碼都是唯一的。一個功能特徵只能使用一個許可權來保護它。</p>
<h6 id="Libraries">Libraries</h6><p>當應用程式所用到的 package 位於不同的函式庫內，此時需指明所用到的函式庫。<br>每一個函式庫都需使用一個 <code>&lt;uses-library&gt;</code> 來單獨宣告。</p>
<h4 id="主要架構_:">主要架構 :</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="pi">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">manifest</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 0. 軟體預設值 --&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="title">uses-permission</span> /&gt;</span> </span><br><span class="line">   	<span class="tag">&lt;<span class="title">permission</span> /&gt;</span></span><br><span class="line">   	<span class="tag">&lt;<span class="title">permission-tree</span> /&gt;</span></span><br><span class="line">   	<span class="tag">&lt;<span class="title">permission-group</span> /&gt;</span></span><br><span class="line">      	<span class="tag">&lt;<span class="title">instrumentation</span> /&gt;</span></span><br><span class="line">   	<span class="tag">&lt;<span class="title">uses-sdk</span> /&gt;</span></span><br><span class="line">   	<span class="tag">&lt;<span class="title">uses-configuration</span> /&gt;</span> </span><br><span class="line">   	<span class="tag">&lt;<span class="title">uses-feature</span> /&gt;</span>  </span><br><span class="line">   	<span class="tag">&lt;<span class="title">supports-screens</span> /&gt;</span>  </span><br><span class="line">   	<span class="tag">&lt;<span class="title">compatible-screens</span> /&gt;</span>  </span><br><span class="line">   	<span class="tag">&lt;<span class="title">supports-gl-texture</span> /&gt;</span>  </span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!-- 1. Application--&gt;</span></span><br><span class="line">   	<span class="tag">&lt;<span class="title">application</span>&gt;</span></span><br><span class="line">   	</span><br><span class="line">       	<span class="comment">&lt;!-- 1-1. Activity --&gt;</span></span><br><span class="line">       	<span class="tag">&lt;<span class="title">activity</span>&gt;</span></span><br><span class="line">       	    <span class="tag">&lt;<span class="title">intent-filter</span>&gt;</span></span><br><span class="line">       	        <span class="tag">&lt;<span class="title">action</span> /&gt;</span></span><br><span class="line">       	        <span class="tag">&lt;<span class="title">category</span> /&gt;</span></span><br><span class="line">       	        <span class="tag">&lt;<span class="title">data</span> /&gt;</span></span><br><span class="line">       	    <span class="tag">&lt;/<span class="title">intent-filter</span>&gt;</span></span><br><span class="line">       	    <span class="tag">&lt;<span class="title">meta-data</span> /&gt;</span></span><br><span class="line">       	<span class="tag">&lt;/<span class="title">activity</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="title">activity-alias</span>&gt;</span></span><br><span class="line">   	        <span class="tag">&lt;<span class="title">intent-filter</span>&gt;</span> . . . <span class="tag">&lt;/<span class="title">intent-filter</span>&gt;</span></span><br><span class="line">       	    <span class="tag">&lt;<span class="title">meta-data</span> /&gt;</span></span><br><span class="line">       	<span class="tag">&lt;/<span class="title">activity-alias</span>&gt;</span></span><br><span class="line"></span><br><span class="line">       	<span class="comment">&lt;!-- 1-2. Service --&gt;</span>	</span><br><span class="line">       	<span class="tag">&lt;<span class="title">service</span>&gt;</span></span><br><span class="line">       	    <span class="tag">&lt;<span class="title">intent-filter</span>&gt;</span> . . . <span class="tag">&lt;/<span class="title">intent-filter</span>&gt;</span></span><br><span class="line">           	<span class="tag">&lt;<span class="title">meta-data</span> /&gt;</span></span><br><span class="line">       	<span class="tag">&lt;/<span class="title">service</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">&lt;!-- 1-3. 廣播接收器 --&gt;</span>	</span><br><span class="line">       	<span class="tag">&lt;<span class="title">receiver</span>&gt;</span></span><br><span class="line">       	    <span class="tag">&lt;<span class="title">intent-filter</span>&gt;</span> . . . <span class="tag">&lt;/<span class="title">intent-filter</span>&gt;</span></span><br><span class="line">       	    <span class="tag">&lt;<span class="title">meta-data</span> /&gt;</span></span><br><span class="line">       	<span class="tag">&lt;/<span class="title">receiver</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">&lt;!-- 1-4. 內容供應程式 --&gt;</span></span><br><span class="line">       	<span class="tag">&lt;<span class="title">provider</span>&gt;</span></span><br><span class="line">           	<span class="tag">&lt;<span class="title">grant-uri-permission</span> /&gt;</span></span><br><span class="line">           	<span class="tag">&lt;<span class="title">meta-data</span> /&gt;</span></span><br><span class="line">           	<span class="tag">&lt;<span class="title">path-permission</span> /&gt;</span></span><br><span class="line">       	<span class="tag">&lt;/<span class="title">provider</span>&gt;</span></span><br><span class="line"></span><br><span class="line">       	<span class="tag">&lt;<span class="title">uses-library</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">   	<span class="tag">&lt;/<span class="title">application</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="title">manifest</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h5 id="0-_軟體預設值">0. 軟體預設值</h5><h6 id="permission_同意權限功能_–&gt;">permission 同意權限功能 –&gt;</h6><p><a href="http://developer.android.com/intl/zh-tw/guide/topics/manifest/uses-permission-element.html" target="_blank" rel="external"><code>&lt;uses-permission&gt;</code></a>： 若應用程式要使用的功能特徵是受到許可權所保護的。</p>
<p><a href="http://developer.android.com/intl/zh-tw/guide/topics/manifest/permission-element.html" target="_blank" rel="external"><code>&lt;permission&gt;</code></a>：應用程式若想要自訂許可權來保護內部元件。</p>
<p><a href="http://developer.android.com/intl/zh-tw/guide/topics/manifest/permission-tree-element.html" target="_blank" rel="external"><code>&lt;permission-tree&gt;</code></a>：幫一組許可權宣告一個 namespace 並定義在程式碼中。</p>
<p><a href="http://developer.android.com/intl/zh-tw/guide/topics/manifest/permission-group-element.html" target="_blank" rel="external"><code>&lt;permission-group&gt;</code></a>：宣告群組名稱，然後在 <permission> 元素的屬性 permissionGroup 指定群組名稱，以便將數個許可權歸納在同一群組。</permission></p>
<h6 id="硬體宣告_–&gt;">硬體宣告 –&gt;</h6><p><a href="http://developer.android.com/intl/zh-tw/guide/topics/manifest/uses-feature-element.html" target="_blank" rel="external"><code>&lt;uses-feature&gt;</code></a>: 運用硬體或軟體功能時所做的宣告:Blueteeth, camera…</p>
<h5 id="1-_Application_應用程式">1. Application 應用程式</h5><h5 id="1-1-_Activity_活動">1-1. Activity 活動</h5><p><a href="http://developer.android.com/intl/zh-tw/guide/topics/manifest/activity-alias-element.html" target="_blank" rel="external"><code>&lt;activity&gt;</code></a>：實作應用程式<strong>有畫面呈現的功能</strong>，沒聲明將不會被運行。</p>
<p><a href="http://developer.android.com/intl/zh-tw/guide/topics/manifest/activity-alias-element.html" target="_blank" rel="external"><code>&lt;activity-alias&gt;</code></a>：android里為了重複使用Activity而設計的。由於它是 <activity> 的別名，因此必須跟在該元素的後面</activity></p>
<h5 id="1-2-_Service_服務">1-2. Service 服務</h5><p><a href="http://developer.android.com/intl/zh-tw/guide/topics/manifest/service-element.html" target="_blank" rel="external"><code>&lt;service&gt;</code></a>：實作應用程式<strong>長時間後台運行</strong>，沒聲明將不會被運行。</p>
<h5 id="1-3-_receiver_廣播接收器">1-3. receiver 廣播接收器</h5><p><a href="http://developer.android.com/intl/zh-tw/guide/topics/manifest/receiver-element.html" target="_blank" rel="external"><code>&lt;receiver&gt;</code></a>：能夠<strong>接收</strong>由所述系統或其它應用程序的廣播。</p>
<h5 id="1-4-_provider_內容供應程式">1-4. provider 內容供應程式</h5><p><a href="http://developer.android.com/intl/zh-tw/guide/topics/manifest/provider-element.html" target="_blank" rel="external"><code>&lt;provider&gt;</code></a>：能夠<strong>提供</strong>由所述系統或其它應用程序的廣播。</p>
<hr>
<h3 id="[_延伸閱讀_標籤字典_]">[ 延伸閱讀 標籤字典 ]</h3><ul>
<li><p><a href="http://developer.android.com/intl/zh-tw/guide/topics/manifest/manifest-intro.html" target="_blank" rel="external">Android Developer官方文件</a></p>
</li>
<li><p><a href="https://erinhsu.github.io/2015/10/20/Android-Manifest-dic1" target="_blank" rel="external">AndroidManifest.xml 小字典(1)</a></p>
</li>
<li><p><a href="https://erinhsu.github.io/2015/10/20/Android-Manifest-dic2" target="_blank" rel="external">AndroidManifest.xml 小字典(2)</a></p>
</li>
</ul>
<h6 id="參考來源">參考來源</h6><ol>
<li><a href="http://gaebolg.blog.163.com/blog/static/19826906820134312050504/" target="_blank" rel="external">灼眼のFate【Android】技巧 6 – Android 禁止屏幕旋转 &amp; 屏幕旋转不刷新 Activity &amp; 动态更改屏幕方向  </a></li>
<li><a href="http://developer.android.com/intl/zh-tw/guide/topics/manifest/manifest-intro.html" target="_blank" rel="external">應用程式manifest-intro | Android Developers</a></li>
<li><a href="http://androidappguider.blogspot.tw/2015/09/App-Manifest.html" target="_blank" rel="external">App Manifest 介紹- Android App 學習筆記 </a></li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<h4 id="簡介說明_:">簡介說明 :</h4><p> 是一個用來描述App的整體資訊設定的XML檔，可向 Android 系統顯示應用程式的基本資訊，也就是系統在執行該應用程式的任何程式碼之前必須具備的資訊。</p>
<h4 id="Manifect-xml_功能_:">]]>
    </summary>
    
      <category term="Android" scheme="http://yoursite.com/tags/Android/"/>
    
      <category term="AndroidManifest" scheme="http://yoursite.com/tags/AndroidManifest/"/>
    
      <category term="MobileEngineer" scheme="http://yoursite.com/categories/MobileEngineer/"/>
    
  </entry>
  
</feed>
