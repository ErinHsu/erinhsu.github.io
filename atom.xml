<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[誰都是我的老師]]></title>
  <subtitle><![CDATA[站在巨人的肩膀上]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://yoursite.com/"/>
  <updated>2016-04-12T07:14:57.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name><![CDATA[ErinB]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[iOS – APNS 推播後，錯誤訊息解析]]></title>
    <link href="http://yoursite.com/2016/04/11/iOS-APNSerror/"/>
    <id>http://yoursite.com/2016/04/11/iOS-APNSerror/</id>
    <published>2016-04-11T03:44:08.000Z</published>
    <updated>2016-04-12T07:14:57.000Z</updated>
    <content type="html"><![CDATA[<p><img src="http://upload-images.jianshu.io/upload_images/1115744-ffe0d6fd8774048f.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="apns process"></p>
<p><img src="http://img.blog.csdn.net/20130621104249562?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQveWFuZ2t1bjA4MjQ=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="apns process"></p>
<ol>
<li><p>服務器沒有啟動</p>
<p> <code>java.net.ConnectException: Connection refused: connecting</code></p>
</li>
<li><p>服務端的證書是不可信的。解決辦法見這篇文章<a href="http://zhuyuehua.iteye.com/blog/1102347" target="_blank" rel="external">http://zhuyuehua.iteye.com/blog/1102347
</a></p>
<p> <code>javax.net.ssl​​.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path building failed</code></p>
</li>
</ol>
<ol>
<li><p>這是由於服務端配置的是SSL雙向認證，而客戶端發送數據是按照服務器是單向認證時發送的，即沒有將客戶端證書信息一起發送給服務端。</p>
<p> <code>java.net.SocketException: Software caused connection abort: recv failed</code></p>
</li>
</ol>
<ol>
<li><p>這一般是服務端防火牆的原因。攔截了客戶端請求。另外，當服務端負載過重時，也會出現此問題。</p>
<p> <code>org.apache.commons.httpclient.NoHttpResponseException</code></p>
</li>
</ol>
<ol>
<li><p>這是由於服務端配置的是SSL雙向認證，而客戶端發送數據是按照服務器是單向認證時發送的，即沒有將客戶端證書信息一起發送給服務端。服務端驗證客戶端證書時，發現客戶端沒有證書，然後就斷開了握手連接。</p>
<p> <code>javax.net.ssl​​.SSLHandshakeException: Remote host closed connection during handshake</code></p>
</li>
</ol>
<h6 id="參考來源">參考來源</h6><ol>
<li><a href="http://www.myexception.cn/web/626358.html" target="_blank" rel="external">apns客戶端怎麼使用httpclient向https服務器發送數據- Web前端</a></li>
<li><a href="http://www.360doc.com/content/15/0118/17/1073512_441822850.shtml" target="_blank" rel="external">手把手教你配置苹果APNS推送服务|钿畑的博客 | 钿畑的博客</a></li>
<li><a href="http://www.jianshu.com/p/51d249b9f3f2" target="_blank" rel="external">远程推送 LongDistancePush - 简书</a></li>
<li><a href="http://blog.csdn.net/yangkun0824/article/details/9143099" target="_blank" rel="external">Apple Push Notification服務- 楊坤的技術博客- 博客頻道- CSDN.NET</a></li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<p><img src="http://upload-images.jianshu.io/upload_images/1115744-ffe0d6fd8774048f.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" ]]>
    </summary>
    
      <category term="APNS" scheme="http://yoursite.com/tags/APNS/"/>
    
      <category term="iOS" scheme="http://yoursite.com/tags/iOS/"/>
    
      <category term="MobileEngineer" scheme="http://yoursite.com/categories/MobileEngineer/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[ANDROID – GCM 推播後，錯誤訊息解析]]></title>
    <link href="http://yoursite.com/2016/04/11/Android-GCMerror/"/>
    <id>http://yoursite.com/2016/04/11/Android-GCMerror/</id>
    <published>2016-04-11T00:44:08.000Z</published>
    <updated>2016-04-12T01:00:53.000Z</updated>
    <content type="html"><![CDATA[<ol>
<li><p>錯的APP KEY。</p>
<p> <code>401 Unauthorized</code></p>
</li>
<li><p>錯的registration_id。</p>
<p> <code>Error=InvalidRegistration</code></p>
</li>
</ol>
<ol>
<li><p>AppKey.ProjectID &lt;&gt; registration_id.ProjectID 。</p>
<p> <code>Error=MismatchSenderId</code> </p>
</li>
<li><p>APP前一次發推播得到刪除情報後，再推一次則得到。</p>
<p> <code>Error=NotRegistered</code> </p>
</li>
<li><p>registration_id 為空。</p>
<p> <code>Error=MissingRegistration</code> </p>
</li>
<li><p>超過一天20萬限制。</p>
<p> <code>Error=QuotaExceeded</code> </p>
</li>
<li><p>超過一分鐘60封限制。</p>
<p> <code>Error=DeviceQuotaExceeded</code>    </p>
</li>
</ol>
<h6 id="參考來源">參考來源</h6><ol>
<li><a href="http://it.zhaozhao.info/archives/50483" target="_blank" rel="external">IT@找著了</a></li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<ol>
<li><p>錯的APP KEY。</p>
<p> <code>401 Unauthorized</code></p>
</li>
<li><p>錯的registration_id。</p>
<p> <code>Error=InvalidRegistration</co]]>
    </summary>
    
      <category term="Android" scheme="http://yoursite.com/tags/Android/"/>
    
      <category term="GCM" scheme="http://yoursite.com/tags/GCM/"/>
    
      <category term="MobileEngineer" scheme="http://yoursite.com/categories/MobileEngineer/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[\Android/ ListView 顯示陣列資料]]></title>
    <link href="http://yoursite.com/2016/02/17/Android-ListviewArray/"/>
    <id>http://yoursite.com/2016/02/17/Android-ListviewArray/</id>
    <published>2016-02-17T02:44:08.000Z</published>
    <updated>2016-02-26T02:02:53.000Z</updated>
    <content type="html"><![CDATA[<h3 id="前言">前言</h3><p>ListView 是非常常用的Layout，將你要顯示的資訊用列表的方式垂直依序顯示出來。</p>
<p>我們常用的View，包括ListView,GridView, Spinner等，常常伴隨著<a href="http://erinhsu.github.io/2016/02/15/Android-Adapter/" target="_blank" rel="external">Adapter</a>的使用。 </p>
<p>如下圖直觀的表達了Data、Adapter、View三者的關係：<br><img src="http://image.lxway.com/upload/f/15/f15b47d3418249a43e56a800abc75e83.jpg" alt=""></p>
<p>另外，可參考<a href="http://erinhsu.github.io/2015/10/28/Android-Recycleview/" target="_blank" rel="external">RecyclerView</a> 為 v7 的新部件，可替代 ListView 使用。</p>
<h3 id="實作（一）">實作（一）</h3><p>把一個陣列裡的資料，用ListView顯示出來。點選項目會出現Toast提示。實作結果如圖：<br><img src="http://1.bp.blogspot.com/-icIpwY5GO0k/UMWHtG4GRBI/AAAAAAAAJXw/ntULvYIgzt4/s1600/2012-12-10+12_40_36-5554_LINE.jpg" alt=""></p>
<h5 id="Layout:">Layout:</h5><p>activity_main.xml 新增 ListView物件</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="pi">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">LinearLayout</span> <span class="attribute">xmlns:android</span>=<span class="value">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">    <span class="attribute">android:orientation</span>=<span class="value">"vertical"</span></span><br><span class="line">    <span class="attribute">android:layout_width</span>=<span class="value">"fill_parent"</span></span><br><span class="line">    <span class="attribute">android:layout_height</span>=<span class="value">"fill_parent"</span></span><br><span class="line">    &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">ListView</span>  </span><br><span class="line">    <span class="attribute">android:layout_width</span>=<span class="value">"fill_parent"</span> </span><br><span class="line">    <span class="attribute">android:layout_height</span>=<span class="value">"fill_parent"</span></span><br><span class="line">    <span class="attribute">android:id</span>=<span class="value">"@+id/listView"</span></span><br><span class="line">    /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h5 id="JAVA">JAVA</h5><p>MainActivity.java </p>
<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword"><span class="keyword">extends</span></span> <span class="title">Activity</span> &#123;</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">ListView</span> listView;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">String</span>[] list = &#123;<span class="string">"鉛筆"</span>,<span class="string">"原子筆"</span>,<span class="string">"鋼筆"</span>,<span class="string">"毛筆"</span>,<span class="string">"彩色筆"</span>&#125;;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">ArrayAdapter</span>&lt;<span class="type">String</span>&gt; listAdapter;</span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void onCreate(<span class="type">Bundle</span> savedInstanceState) &#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(<span class="type">R</span>.layout.activity_main);</span><br><span class="line"></span><br><span class="line">        listView = (<span class="type">ListView</span>)findViewById(<span class="type">R</span>.id.listView);</span><br><span class="line">        listAdapter = <span class="keyword">new</span> <span class="type">ArrayAdapter</span>(<span class="keyword">this</span>,android.<span class="type">R</span>.layout.simple_list_item_1,list);</span><br><span class="line">        listView.setAdapter(listAdapter);</span><br><span class="line">        listView.setOnItemClickListener(<span class="keyword">new</span> <span class="type">OnItemClickListener</span>()&#123;</span><br><span class="line">           <span class="annotation">@Override</span></span><br><span class="line">           public void onItemClick(<span class="type">AdapterView</span>&lt;?&gt; parent, <span class="type">View</span> view, int position, long id)&#123;</span><br><span class="line">              <span class="type">Toast</span>.makeText(getApplicationContext(), <span class="string">"你選擇的是"</span>+list[position], <span class="type">Toast</span>.<span class="type">LENGTH_SHORT</span>).show();</span><br><span class="line">           &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>ps. android幫我們設計幾種了listView的樣式，如：</p>
<p>android.R.layout.simple_list_item_1<br><img src="http://farm8.staticflickr.com/7238/7163922530_b61a301bd2.jpg" alt=""><br>android.R.layout.simple_list_item_2<br><img src="http://farm8.staticflickr.com/7243/7163922460_2f9790c2ac.jpg" alt=""></p>
<h3 id="實作（二）_設計ListItem樣式">實作（二） 設計ListItem樣式</h3><h5 id="Layout:-1">Layout:</h5><p>activity_main.xml 新增 ListView物件</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="pi">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">LinearLayout</span> <span class="attribute">xmlns:android</span>=<span class="value">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">    <span class="attribute">android:orientation</span>=<span class="value">"vertical"</span></span><br><span class="line">    <span class="attribute">android:layout_width</span>=<span class="value">"fill_parent"</span></span><br><span class="line">    <span class="attribute">android:layout_height</span>=<span class="value">"fill_parent"</span></span><br><span class="line">    &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">ListView</span>  </span><br><span class="line">    <span class="attribute">android:layout_width</span>=<span class="value">"fill_parent"</span> </span><br><span class="line">    <span class="attribute">android:layout_height</span>=<span class="value">"fill_parent"</span></span><br><span class="line">    <span class="attribute">android:id</span>=<span class="value">"@+id/listView"</span></span><br><span class="line">    /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>新增一個<strong>listitem.xml檔</strong>，來設計item樣式。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="pi">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">LinearLayout</span> <span class="attribute">xmlns:android</span>=<span class="value">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">    <span class="attribute">android:orientation</span>=<span class="value">"vertical"</span> <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">    <span class="attribute">android:layout_height</span>=<span class="value">"match_parent"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="title">LinearLayout</span></span><br><span class="line">        <span class="attribute">android:orientation</span>=<span class="value">"horizontal"</span></span><br><span class="line">        <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">        <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">        <span class="attribute">android:paddingBottom</span>=<span class="value">"10dp"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="title">TextView</span></span><br><span class="line">            <span class="attribute">android:layout_width</span>=<span class="value">"wrap_content"</span></span><br><span class="line">            <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">            <span class="attribute">android:textAppearance</span>=<span class="value">"?android:attr/textAppearanceMedium"</span></span><br><span class="line">            <span class="attribute">android:text</span>=<span class="value">"產品:"</span></span><br><span class="line">            <span class="attribute">android:layout_weight</span>=<span class="value">"1"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="title">TextView</span></span><br><span class="line">            <span class="attribute">android:layout_width</span>=<span class="value">"wrap_content"</span></span><br><span class="line">            <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">            <span class="attribute">android:id</span>=<span class="value">"@+id/itemText"</span></span><br><span class="line">            <span class="attribute">android:layout_weight</span>=<span class="value">"1"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="title">LinearLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="title">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<h5 id="JAVA-1">JAVA</h5><p>MainActivity.java </p>
<p>將(Android預設簡易樣式)</p>
<p><code>listAdapter = new ArrayAdapter(this,android.R.layout.simple_list_item_1,list);</code></p>
<p>改成（我們自製的樣式）</p>
<p><code>listAdapter = new ArrayAdapter(this,R.layout.listitem, R.id.itemText ,list);</code></p>
<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword"><span class="keyword">extends</span></span> <span class="title">Activity</span> &#123;</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">ListView</span> listView;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">String</span>[] list = &#123;<span class="string">"鉛筆"</span>,<span class="string">"原子筆"</span>,<span class="string">"鋼筆"</span>,<span class="string">"毛筆"</span>,<span class="string">"彩色筆"</span>&#125;;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">ArrayAdapter</span>&lt;<span class="type">String</span>&gt; listAdapter;</span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void onCreate(<span class="type">Bundle</span> savedInstanceState) &#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(<span class="type">R</span>.layout.activity_main);</span><br><span class="line"></span><br><span class="line">        listView = (<span class="type">ListView</span>)findViewById(<span class="type">R</span>.id.listView);</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line">        listAdapter = <span class="keyword">new</span> <span class="type">ArrayAdapter</span>(<span class="keyword">this</span>,<span class="type">R</span>.layout.listitem, <span class="type">R</span>.id.itemText ,list);</span><br><span class="line">        </span><br><span class="line">        listView.setAdapter(listAdapter);</span><br><span class="line">        listView.setOnItemClickListener(<span class="keyword">new</span> <span class="type">OnItemClickListener</span>()&#123;</span><br><span class="line">           <span class="annotation">@Override</span></span><br><span class="line">           public void onItemClick(<span class="type">AdapterView</span>&lt;?&gt; parent, <span class="type">View</span> view, int position, long id)&#123;</span><br><span class="line">              <span class="type">Toast</span>.makeText(getApplicationContext(), <span class="string">"你選擇的是"</span>+list[position], <span class="type">Toast</span>.<span class="type">LENGTH_SHORT</span>).show();</span><br><span class="line">           &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h6 id="參考來源">參考來源</h6><ol>
<li><a href="http://developer.android.com/intl/zh-tw/reference/android/widget/ListView.html" target="_blank" rel="external">ListView | Android Developers</a></li>
<li><a href="http://huli.logdown.com/posts/280137-android-custom-listview" target="_blank" rel="external">[Android] 自訂ListView « Huli’s Blog</a></li>
<li><a href="http://givemepass.blogspot.tw/2011/11/listview.html" target="_blank" rel="external">GiveMePasS’s Android惡補筆記: 如何使用ListView</a></li>
<li><a href="http://imax-live.blogspot.tw/2012/12/android-listview.html" target="_blank" rel="external">Max的Android心得筆記: Android ListView(列表視圖)</a></li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="前言">前言</h3><p>ListView 是非常常用的Layout，將你要顯示的資訊用列表的方式垂直依序顯示出來。</p>
<p>我們常用的View，包括ListView,GridView, Spinner等，常常伴隨著<a href="http://erin]]>
    </summary>
    
      <category term="Android" scheme="http://yoursite.com/tags/Android/"/>
    
      <category term="Array" scheme="http://yoursite.com/tags/Array/"/>
    
      <category term="ListView" scheme="http://yoursite.com/tags/ListView/"/>
    
      <category term="MobileEngineer" scheme="http://yoursite.com/categories/MobileEngineer/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[\Android/ Recyclerview & CardView]]></title>
    <link href="http://yoursite.com/2016/02/16/Android-Recycleview/"/>
    <id>http://yoursite.com/2016/02/16/Android-Recycleview/</id>
    <published>2016-02-16T02:49:25.000Z</published>
    <updated>2016-02-24T03:03:42.000Z</updated>
    <content type="html"><![CDATA[<h3 id="前言">前言</h3><p><strong>RecyclerView</strong> 為 v7 的新部件，可替代 ListView 使用，標準化了 ViewHolder 類似於 ListView 中 convertView。</p>
<p>RecyclerView 快速實現 listview 、 gridview 、瀑布流的效果，而且還可以設置橫向和縱向顯示，添加動畫效果也非常簡單(自帶了 ItemAnimation ，可以設置加載和移除時的動畫，方便做出各種動態瀏覽的效果)</p>
<p>以下是Google在對於RecyclerView的描述</p>
<p><code>A flexible view for providing a limited window into a large data set.</code> </p>
<p>以下是它的新特性：</p>
<ul>
<li>分離出數據顯示相關的所有問題，只關注View的回收和復用</li>
<li>對數據的顯示、動畫的配置進行高度解耦，提供了插拔式的體驗</li>
<li>強制使用ViewHolder模式，消除不必要的Layout Resource查找時間內置添加和移除動畫</li>
</ul>
<p><strong>CardView</strong> 也為 v7 的新部件，常與RecyclerView配合使用，可視為RecyclerView的item項目。優化了我們自定義的Listiem設計，自帶背景與陰影屬性，供我們設計使用。</p>
<p>以下是Google在對於CardView的描述</p>
<p><code>A FrameLayout with a rounded corner background and shadow.</code></p>
<h3 id="對應Activity生命週期">對應Activity生命週期</h3><ul>
<li><strong>getItemViewType</strong>：獲取View類型</li>
<li><strong>onCreateViewHolder</strong>：創建ViewHolder</li>
<li><strong>ViewHolderonViewAttac.bhedToWindow</strong>：當It​​em可見時調用</li>
<li><strong>onBindViewHolder</strong>：綁定數據以及邏輯控製樣式</li>
<li><strong>onViewDetachedFromWindow：Item</strong>不可見時調用</li>
<li><strong>onViewRecycled：Item</strong>被回收時調用</li>
</ul>
<h3 id="實作">實作</h3><p>LinearLayoutManager</p>
<p><img src="https://raw.githubusercontent.com/Frank-Zhu/AndroidRecyclerViewDemo/master/art/normal_2.png" alt="LinearLayoutManager"></p>
<p>GridLayoutManager</p>
<p><img src="https://raw.githubusercontent.com/Frank-Zhu/AndroidRecyclerViewDemo/master/art/normal_1.png" alt="GridLayoutManager"></p>
<h4 id="Gradle_Compile:">Gradle Compile:</h4><p>在build.gradle(app)內加入recyclerview和cardview的引用</p>
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">compile</span> <span class="string">'com.android.support:recyclerview-v7:23.0.+'</span></span><br><span class="line"><span class="keyword">compile</span> <span class="string">'com.android.support:cardview-v7:23.0.+'</span></span><br></pre></td></tr></table></figure>
<h4 id="Layout:">Layout:</h4><p>XML文件用使用它</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;android<span class="class">.support</span><span class="class">.v7</span><span class="class">.widget</span><span class="class">.RecyclerView</span></span><br><span class="line">    xmlns:android=<span class="string">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">    android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">    android:layout_height=<span class="string">"match_parent"</span></span><br><span class="line">    android:id=<span class="string">"@+id/recycler_view"</span></span><br><span class="line">    android:layout_centerVertical=<span class="string">"true"</span></span><br><span class="line">    android:layout_centerHorizontal=<span class="string">"true"</span>/&gt;</span><br></pre></td></tr></table></figure>
<h4 id="Java:">Java:</h4><p>MainActivity中设置它</p>
<figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">ActionBarActivity</span> </span>&#123;</span><br><span class="line">    <span class="annotation">@InjectView</span>(R.id.recycler_view)</span><br><span class="line">    RecyclerView mRecyclerView;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        ButterKnife.inject(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">        mRecyclerView.setLayoutManager(<span class="keyword">new</span> LinearLayoutManager(<span class="keyword">this</span>));<span class="comment">//这里用线性显示 类似于listview</span></span><br><span class="line"><span class="comment">//        mRecyclerView.setLayoutManager(new GridLayoutManager(this, 2));//这里用线性宫格显示 类似于grid view</span></span><br><span class="line"><span class="comment">//        mRecyclerView.setLayoutManager(new StaggeredGridLayoutManager(2, OrientationHelper.VERTICAL));//这里用线性宫格显示 类似于瀑布流</span></span><br><span class="line">        mRecyclerView.setAdapter(<span class="keyword">new</span> NormalRecyclerViewAdapter(<span class="keyword">this</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">boolean</span> <span class="title">onCreateOptionsMenu</span><span class="params">(Menu menu)</span> </span>&#123;</span><br><span class="line">        getMenuInflater().inflate(R.menu.menu_main, menu);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">boolean</span> <span class="title">onOptionsItemSelected</span><span class="params">(MenuItem item)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> id = item.getItemId();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (id == R.id.action_settings) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">return</span> <span class="keyword">super</span>.<span class="title">onOptionsItemSelected</span><span class="params">(item)</span></span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>新增一個適配器（NormalRecyclerViewAdapter）代碼</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">NormalRecyclerViewAdapter</span> <span class="keyword">extends</span> <span class="title">RecyclerView</span>.<span class="title">Adapter</span>&lt;<span class="title">NormalRecyclerViewAdapter</span>.<span class="title">NormalTextViewHolder</span>&gt; </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> LayoutInflater mLayoutInflater;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Context mContext;</span><br><span class="line">    <span class="keyword">private</span> String[] mTitles;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">NormalRecyclerViewAdapter</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">        mTitles = context.getResources().getStringArray(R.array.titles);</span><br><span class="line">        mContext = context;</span><br><span class="line">        mLayoutInflater = LayoutInflater.from(context);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> NormalTextViewHolder <span class="title">onCreateViewHolder</span><span class="params">(ViewGroup parent, <span class="keyword">int</span> viewType)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> NormalTextViewHolder(mLayoutInflater.inflate(R.layout.item_text, parent, <span class="keyword">false</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onBindViewHolder</span><span class="params">(NormalTextViewHolder holder, <span class="keyword">int</span> position)</span> </span>&#123;</span><br><span class="line">        holder.mTextView.setText(mTitles[position]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getItemCount</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> mTitles == <span class="keyword">null</span> ? <span class="number">0</span> : mTitles.length;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">NormalTextViewHolder</span> <span class="keyword">extends</span> <span class="title">RecyclerView</span>.<span class="title">ViewHolder</span> </span>&#123;</span><br><span class="line">        <span class="annotation">@InjectView</span>(R.id.text_view)</span><br><span class="line">        TextView mTextView;</span><br><span class="line"></span><br><span class="line">        NormalTextViewHolder(View view) &#123;</span><br><span class="line">            <span class="keyword">super</span>(view);</span><br><span class="line">            ButterKnife.inject(<span class="keyword">this</span>, view);</span><br><span class="line">            view.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">                <span class="annotation">@Override</span></span><br><span class="line">                <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">                    Log.d(<span class="string">"NormalTextViewHolder"</span>, <span class="string">"onClick--&gt; position = "</span> + getPosition());</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h6 id="參考來源">參考來源</h6><ol>
<li><a href="http://frank-zhu.github.io/android/2015/01/16/android-recyclerview-part-1/" target="_blank" rel="external">RecyclerView使用详解（一） · Frank-Zhu</a></li>
<li><a href="https://www.binpress.com/tutorial/android-l-recyclerview-and-cardview-tutorial/156" target="_blank" rel="external">A Guide to Android RecyclerView and CardView - Tutorial - Binpress</a></li>
<li><a href="http://developer.android.com/intl/zh-tw/reference/android/support/v7/widget/RecyclerView.html" target="_blank" rel="external">RecyclerView | Android Developers</a></li>
<li><a href="https://www.binpress.com/tutorial/android-l-recyclerview-and-cardview-tutorial/156" target="_blank" rel="external">CardView | Android Developers</a></li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="前言">前言</h3><p><strong>RecyclerView</strong> 為 v7 的新部件，可替代 ListView 使用，標準化了 ViewHolder 類似於 ListView 中 convertView。</p>
<p>RecyclerVie]]>
    </summary>
    
      <category term="Android" scheme="http://yoursite.com/tags/Android/"/>
    
      <category term="CardView" scheme="http://yoursite.com/tags/CardView/"/>
    
      <category term="RecyclerView" scheme="http://yoursite.com/tags/RecyclerView/"/>
    
      <category term="MobileEngineer" scheme="http://yoursite.com/categories/MobileEngineer/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[\Android/ Adapter 觀念]]></title>
    <link href="http://yoursite.com/2016/02/15/Android-Adapter/"/>
    <id>http://yoursite.com/2016/02/15/Android-Adapter/</id>
    <published>2016-02-15T02:44:08.000Z</published>
    <updated>2016-02-26T02:03:23.000Z</updated>
    <content type="html"><![CDATA[<h3 id="前言">前言</h3><p><code>Adapter (n.) 適配器; 多功能插頭; 改編者</code></p>
<p>在Android的世界裡，Adapter是<code>Database和UI（View）之間一個重要的橋樑</code>，用於連接後端資料和前端介面。</p>
<p>我們常用的View，包括ListView,GridView, Spinner等，常常伴隨著Adapter的使用。</p>
<p>如下圖直觀的表達了Data、Adapter、View三者的關係：<br><img src="http://image.lxway.com/upload/f/15/f15b47d3418249a43e56a800abc75e83.jpg" alt=""></p>
<h3 id="種類">種類</h3><p>比較常用的有BaseAdapter，SimpleAdapter，ArrayAdapter，SimpleCursorAdapter等。</p>
<ul>
<li><p><a href="http://developer.android.com/reference/android/widget/ArrayAdapter.html" target="_blank" rel="external"><strong><code>ArrayAdapter&lt;T&gt;</code></strong></a></p>
<p>  <img src="http://i.stack.imgur.com/NC9L0.png" alt="Single ListView"></p>
<ol>
<li><p>ArrayAdapter可繼承自BaseAdapter，最為簡單，只能展示一行字。</p>
</li>
<li><p>利用ArrayAdapter的<code>add()</code>方法新增資料到adapter尾端或是用<code>insert()</code>新增資料到特定的位置；刪除資料則使用<code>remove()</code>方法。</p>
</li>
<li><p>ListView類別是負責顯示在螢幕上，adapter類別才是負責處理資料的繫結。一旦adapter內的資料有了變更，則adapter和ListView的內容就失去了同步，這是侯需要由adapter發送一個<code>notifyDataSetChanged()</code>方法通知ListView重新同步顯示的內容。</p>
</li>
</ol>
</li>
<li><p><a href="http://developer.android.com/reference/android/widget/BaseAdapter.html" target="_blank" rel="external"><strong><code>BaseAdapter</code></strong></a></p>
<ol>
<li><p>當ListView需要附加其他更強大的功能時，就必須重新自定義一個Adapter，此時可繼承使用BaseAdapter來建構，具有較高的靈活性。</p>
</li>
<li><p>使用者自定的Layout時需要覆寫<code>getCount()</code>, <code>getItem(Int position)</code>, <code>getItemId(int position)</code>, 還有 <code>getView(int position, View convertView, ViewGroup parent)</code>那麼多函式。</p>
</li>
</ol>
</li>
<li><p><a href="http://developer.android.com/reference/android/support/v4/widget/CursorAdapter.html" target="_blank" rel="external"><code>CursorAdapter</code></a></p>
</li>
<li><a href="http://developer.android.com/reference/android/widget/HeaderViewListAdapter.html" target="_blank" rel="external"><code>HeaderViewListAdapter</code></a></li>
<li><a href="http://developer.android.com/reference/android/widget/ListAdapter.html" target="_blank" rel="external"><code>ListAdapter</code></a></li>
<li><a href="http://developer.android.com/reference/android/support/v4/widget/ResourceCursorAdapter.html" target="_blank" rel="external"><code>ResourceCursorAdapter</code></a></li>
<li><p><a href="http://developer.android.com/reference/android/widget/SimpleAdapter.html" target="_blank" rel="external"><strong><code>SimpleAdapter</code></strong></a> </p>
<p>  有最好的擴充性，可以<code>定義各種各樣的佈局</code>出來，可以放上ImageView（圖片），還可以放上Button（按鈕），CheckBox（複選框）等等。代碼都可以直接繼承了ListActivity。</p>
</li>
<li><p><a href="http://developer.android.com/reference/android/support/v4/widget/SimpleCursorAdapter.html" target="_blank" rel="external"><strong><code>SimpleCursorAdapter</code></strong></a></p>
<p>  可以適用於簡單的純文字型ListView，它需要Cursor的字段和UI的id對應起來。如需要實現更複雜的UI也可以重寫其他方法。可以認為是SimpleAdapter<code>對資料庫的簡單結合</code>，可以方便地把數據庫的內容以列表的形式展示出來。</p>
</li>
<li><p><a href="http://developer.android.com/reference/android/widget/SpinnerAdapter.html" target="_blank" rel="external"><code>SpinnerAdapter</code></a></p>
<p>  <img src="http://images.cnblogs.com/cnblogs_com/over140/2010/11/2010-11-26_1.jpg" alt="SpinnerAdapter"></p>
<p>  擴展自Adapter 的適配器是在Spinner 與數據之間的一座橋樑。一個Spinner Adapter 允許定義兩個不同的視圖：一是在Spinner 上顯示數據，另一個是當Spinner 按下時在下拉列表裡顯示數據。</p>
</li>
<li><p><a href="http://developer.android.com/reference/android/support/v7/widget/ThemedSpinnerAdapter.html" target="_blank" rel="external"><code>ThemedSpinnerAdapter</code></a></p>
</li>
<li><a href="http://developer.android.com/reference/android/widget/WrapperListAdapter.html" target="_blank" rel="external"><code>WrapperListAdapter</code></a></li>
</ul>
<h6 id="參考來源">參考來源</h6><ol>
<li><a href="http://developer.android.com/intl/zh-tw/reference/android/widget/ListView.html" target="_blank" rel="external">ListView | Android Developers</a></li>
<li><a href="http://huli.logdown.com/posts/280137-android-custom-listview" target="_blank" rel="external">[Android] 自訂ListView « Huli’s Blog</a></li>
<li><a href="http://www.cnblogs.com/devinzhang/archive/2012/01/20/2328334.html" target="_blank" rel="external">Android之Adapter用法总结 - Devin Zhang - 博客园</a></li>
<li><a href="http://www.jianshu.com/p/136e57599537" target="_blank" rel="external">Android入門2：從GridView控件使用到自定義Adapter - 簡書</a></li>
<li><a href="http://hhliu-skills.blogspot.tw/2012/04/arrayadapter.html" target="_blank" rel="external">雜技本 - Android程式開發: ArrayAdapter的使用</a></li>
<li><a href="http://www.cnblogs.com/over140/archive/2010/11/26/1888359.html" target="_blank" rel="external">Android API 中文（50） —— SpinnerAdapter - 農民伯伯- 博客園</a></li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="前言">前言</h3><p><code>Adapter (n.) 適配器; 多功能插頭; 改編者</code></p>
<p>在Android的世界裡，Adapter是<code>Database和UI（View）之間一個重要的橋樑</code>，用於連接後端資料]]>
    </summary>
    
      <category term="Adapter" scheme="http://yoursite.com/tags/Adapter/"/>
    
      <category term="Android" scheme="http://yoursite.com/tags/Android/"/>
    
      <category term="MobileEngineer" scheme="http://yoursite.com/categories/MobileEngineer/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[\ionic/ 環境架設]]></title>
    <link href="http://yoursite.com/2016/02/01/Ionic/"/>
    <id>http://yoursite.com/2016/02/01/Ionic/</id>
    <published>2016-02-01T02:30:20.000Z</published>
    <updated>2016-03-02T05:52:44.000Z</updated>
    <content type="html"><![CDATA[<h3 id="前言">前言</h3><p>一般我們所知的手機作業系統，以最大宗來說，iOS與Android為主要兩大市場，當然也有windows phone等等其他作業系統，這些相互獨立的市場，開發條件與方式當然截然不同。</p>
<p>想要成為一個行動裝置軟體開發者，首先你要選擇你想攻佔的是屬於apple系列（ios）還是google系列(Android)的領土，才能進行對應技術的學習與開發。</p>
<p>請下關鍵字：</p>
<p>apple系列（ios）：Ｘcode, Swift, Object-C(舊), Mac電腦 ….</p>
<p>google系列(Android)：Android Studio, Java, XML, Eclipse(舊) … </p>
<p>倘若，你有個理想，想要擁有一把劍能在兩大領土都能大開殺戒的武器，<strong>ionic</strong>是你最好的選擇。如果你又剛剛好會寫網頁、架網站，哇～你應該就是拿破崙了，開疆闢土都沒問題了。</p>
<p>已經有許多開發成功的案例在你我手機App Store/Google Play裡了，看看官網上的<a href="http://showcase.ionicframework.com/" target="_blank" rel="external"><code>Showcase</code></a>吧~</p>
<p>有信心百倍了嗎？心動不如行動吧！</p>
<h3 id="關於ionic">關於ionic</h3><p>以建立 hybrid mobile apps 為目標的 HTML5 mobile app 開發框架。</p>
<p>有別於目前 Native 方式（前言提到下關鍵字者會告訴你）， Native 方式效能較佳且可以對於硬體有更好的掌握，但缺點是開發週期較長。而ionic實際上就是跑在瀏覽器內核上可以操控硬體的小網站，缺點是效能比起 Native 還是有些差距。</p>
<p>也可以上架到市集給使用者下載，優勢是跨平台、開發速度快、可以使用許多第三方的程式碼</p>
<h3 id="先備技術知識">先備技術知識</h3><ol>
<li>HTML 5</li>
<li>Angular Js</li>
<li>Restful API</li>
<li>Sass </li>
</ol>
<p>就是寫網頁了吧～看起來是前端技術，開心的是，後端用你在行的技術就可以了～</p>
<h3 id="Step1_QUICK_START">Step1 QUICK START</h3><p>現在我們開始照的官網上的指示一步一步走</p>
<p><a href="http://ionicframework.com/getting-started/" target="_blank" rel="external"><code>官網圖文並茂版(點我)</code></a></p>
<p><a href="https://www.youtube.com/watch?v=15daTaDQ6Yg" target="_blank" rel="external"><code>英文影片版(點我)</code></a></p>
<p>隨客官愛好進行版本選學，最後附上<code>簡易版(下拉)教學</code>給客官賞味 XD</p>
<h4 id="Step2_安裝環境設置">Step2 安裝環境設置</h4><p>確認自己的電腦是否有安裝 <strong>Node.js 4 </strong>與<strong> 最新的 Apache Cordova</strong>。</p>
<p>以及設置iOS與Android開發依循環境，特別是iOS必須在Mac OS X環境下才能測試開發。</p>
<ol>
<li><p><a href="http://developer.android.com/sdk/index.html" target="_blank" rel="external">Android Studio</a>: 請可安裝Android Studio或是單獨安裝 <a href="http://developer.android.com/intl/zh-tw/sdk/index.html#Other" target="_blank" rel="external">sdk</a>。並確認SDK版本</p>
</li>
<li><p><a href="https://nodejs.org/en/" target="_blank" rel="external">Node.js 4</a>:直接下載並安裝小於5的版本使用</p>
</li>
<li><p><a href="https://www.npmjs.com/package/ionic" target="_blank" rel="external">Cordova ionic</a>: 開啟command line 透過 Node.js 的 npm 指令下載</p>
</li>
</ol>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="operator"><span class="keyword">install</span> -<span class="keyword">g</span> cordova ionic</span></span><br></pre></td></tr></table></figure>
<h4 id="Step3_建立專案">Step3 建立專案</h4><ol>
<li><p>cd到你想建立專案的資料夾，利用模組範例，建立一個新的專案資料夾</p>
 <figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ionic <span class="keyword">start</span> &#123;projectName&#125; &#123;blank/tabs/sidemenu&#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<ol>
<li><p>專案資料檔案結構 <a href="http://blog.kdchang.cc/2015/02/ionic-note-book-chapter-2-installation.html" target="_blank" rel="external">(參考來源)</a></p>
 <figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">├── bower<span class="class">.json</span>     <span class="comment">// bower dependencies</span></span><br><span class="line">├── config<span class="class">.xml</span>     <span class="comment">// cordova configuration</span></span><br><span class="line">├── gulpfile<span class="class">.js</span>    <span class="comment">// gulp tasks</span></span><br><span class="line">├── hooks          <span class="comment">// custom cordova hooks to execute on specific commands</span></span><br><span class="line">├── ionic<span class="class">.project</span>  <span class="comment">// ionic configuration</span></span><br><span class="line">├── package<span class="class">.json</span>   <span class="comment">// node dependencies</span></span><br><span class="line">├── platforms      <span class="comment">// iOS/Android specific builds will reside here</span></span><br><span class="line">├── plugins        <span class="comment">// where your cordova/ionic plugins will be installed</span></span><br><span class="line">├── scss           <span class="comment">// scss code, which will output to www/css/</span></span><br><span class="line">└── www            <span class="comment">// application - JS code and libs, CSS, images, etc.</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<h4 id="Step4_建立測試平台">Step4 建立測試平台</h4><figure class="highlight scilab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> &#123;projectName&#125;  <span class="comment">//指到專案那個資料夾裡</span></span><br></pre></td></tr></table></figure>
<p>產生測試參數</p>
<figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ionic <span class="built_in">platform</span> <span class="built_in">add</span> &#123;android/ios&#125;</span><br></pre></td></tr></table></figure>
<p><strong>注意</strong> iOS 不能在windows環境下運行，但依然會幫你建立(建立爽的嗎哈哈)，出錯如下。</p>
<p><code>WARNING: Applications for platform ios can not be built on this OS - win ...</code></p>
<p><strong>注意</strong> Android 在兩種環境下皆可運行，但必須安裝JDK (&gt;1.6 )與 SDK Manager </p>
<p><strong>注意</strong> 若Android在 Mac OS X 錯誤</p>
<p><code>Error: ERROR : Make sure JAVA_HOME is set, as well as paths to your JDK and JRE for java.</code></p>
<p>請可安裝Android開發的IDE（原本Native開發者不用擔心的問題）或執行以下指令</p>
<figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export JAV<span class="built_in">A_HOME</span>=$(/usr/libexec/jav<span class="built_in">a_home</span>)</span><br></pre></td></tr></table></figure>
<h4 id="Step5_執行">Step5 執行</h4><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ionic serve <span class="comment">//網頁</span></span><br></pre></td></tr></table></figure>
<figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">//建立成一個<span class="keyword">android/ios對應開發專案資料夾</span><br><span class="line"></span><span class="label">ionic</span> <span class="keyword">build </span>&#123;<span class="keyword">android/ios&#125;</span><br><span class="line"></span>//emulate模擬器<span class="comment">; run實機</span></span><br><span class="line"> ----------------- ios實機要用Xcode執行 /<span class="keyword">android </span>SDK <span class="number">16</span>up</span><br><span class="line"><span class="label">ionic</span> &#123;emulate/run&#125; &#123;<span class="keyword">android/ios&#125;</span></span><br></pre></td></tr></table></figure>
<h4 id="Step6_發布">Step6 發布</h4><p>完成了你的作品之後，怎麼把它上傳給其他使用者使用呢。<br>在上架之前我們必須先把用於 debug 的 plugin 移除避免困擾。</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cordova plugin rm org<span class="class">.apache</span><span class="class">.cordova</span><span class="class">.console</span></span><br></pre></td></tr></table></figure>
<p>將我們的 App build 成還沒簽證的 .apk 檔</p>
<figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cordova build <span class="comment">--release android</span></span><br></pre></td></tr></table></figure>
<p>用 JDK 的工具來產生我們簽核用的 key，若已有自己的 signing key 可以忽略這個步驟。</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">keytool -genkey -v -keystore my-<span class="operator"><span class="keyword">release</span>-<span class="keyword">key</span>.keystore -<span class="keyword">alias</span> alias_name -keyalg RSA -keysize <span class="number">2048</span> -validity <span class="number">10000</span></span></span><br></pre></td></tr></table></figure>
<p>產生 my-release-key.keystore 檔案在目前的資料夾，請妥善保存這個檔案，避免遺失，不然就無法更新 App 啦！</p>
<p>接著我們用產生或已有的 key，將 apk 進行簽核。</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jarsigner -verbose -sigalg SHA1withRSA -digestalg SHA1 -keystore my-<span class="operator"><span class="keyword">release</span>-<span class="keyword">key</span>.keystore HelloWorld-<span class="keyword">release</span>-<span class="keyword">unsigned</span>.apk alias_name</span></span><br></pre></td></tr></table></figure>
<p>簽核完後我們可以使用 APK 優化工具 <a href="http://developer.android.com/intl/zh-tw/tools/help/zipalign.html" target="_blank" rel="external">zip align</a>，優化後產生 HelloWorld.apk 的檔案。</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zipalign -v <span class="number">4</span> HelloWorld-release-<span class="keyword">unsigned</span>.apk HelloWorld.apk</span><br></pre></td></tr></table></figure>
<p>若是之後想更新 App，記得更新 platforms/android/AndroidManifest.xml 中的 android:versionCode 版本值並再次提交你的 .apk 檔案。</p>
<hr>
<h4 id="實作">實作</h4><p>ionic 架構<br><img src="http://ithelp.ithome.com.tw/upload/images/20141013/20141013092618543b2a3a0cd3e_resize_600.png" alt=""><br>主要開發<br><img src="http://ithelp.ithome.com.tw/upload/images/20141013/20141013092659543b2a635c7c5_resize_600.png" alt=""></p>
<h4 id="其他疑難雜症">其他疑難雜症</h4><p>2.<strong>Android 模擬器(Genymotion)注意事項</strong></p>
<p>大家都知道 Android 模擬器（AVD）在運行速度慢且無法代表真實的設備，若要使用虛擬機的話（常用 Genymotion 替代，它會在你的電腦中將 Android 設備當做一個虛擬機來運行），因為 Genymotion 被視為電腦的物理設備，因此使用 Genymotion 的話將使用<code>ionic run</code> 而非 ionic emulate。</p>
<p>3.<strong>偵測實機問題</strong> </p>
<p>依序執行以下三種指令</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">adb <span class="operator"><span class="keyword">kill</span>-<span class="keyword">server</span> </span><br><span class="line">adb <span class="keyword">start</span>-<span class="keyword">server</span> </span><br><span class="line">adb devices</span></span><br></pre></td></tr></table></figure>
<p>4.<strong>Android 執行版本問題</strong></p>
<p><code>Error</code> </p>
<p><code>1.&quot;SDK Platform&quot; for android-23</code></p>
<p><code>2.Lastest &quot;Android SDK Platform-tool&quot;</code> </p>
<p><code>3.Lastest &quot;Android SDK Build-tools&quot;</code></p>
<p>Mac OS X /Linux 在 ~/.bash_profile 文件最後加入以下指令&lt;!?&gt;</p>
<figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export ANDROID_HOME=/Users/your_user_name/android-sdks</span><br><span class="line">export PATH=$&#123;PATH&#125;:<span class="variable">$ANDROID</span>_HOME/tools:<span class="variable">$ANDROID</span>_HOME/platform-tools</span><br></pre></td></tr></table></figure>
<p>Windows 環境變數設制</p>
<figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// android-sdks位置</span></span><br><span class="line">set ANDROID_HOME=C:\&lt;installation location&gt;\android-sdk-windowsset PATH=<span class="variable">%PATH</span><span class="variable">%;</span><span class="variable">%ANDROID_HOME</span><span class="variable">%\</span>tools;<span class="variable">%ANDROID_HOME</span><span class="variable">%\</span>platform-tools</span><br></pre></td></tr></table></figure>
<h6 id="參考來源">參考來源</h6><p>Full-Stack Engineering系列文章</p>
<ol>
<li><a href="http://blog.kdchang.cc/2015/02/ionic-note-ionic-book-chapter-1-all-about-ionic.html" target="_blank" rel="external">Full-Stack Engineering: [Ionic 初心者筆記] 官方教學 - Ch 1 關於 Ionic</a></li>
<li><a href="http://blog.kdchang.cc/2015/02/ionic-note-book-chapter-2-installation.html" target="_blank" rel="external">Full-Stack Engineering: [Ionic 初心者筆記] 官方教學 - Ch 2 安裝</a></li>
<li><a href="http://blog.kdchang.cc/2015/02/ionic-note-book-chapter-3-start-your-ionic-mobile-app.html" target="_blank" rel="external">Full-Stack Engineering: [Ionic 初心者筆記] 官方教學 - Ch 3 開始第一個 Ionic Mobile App</a></li>
<li><a href="http://blog.kdchang.cc/2015/02/ionic-note-book-chapter-4-test-your-ionic-mobile-app.html" target="_blank" rel="external">Full-Stack Engineering: [Ionic 初心者筆記] 官方教學 - Ch 4 測試你的 Ionic Mobile App</a></li>
<li><a href="http://blog.kdchang.cc/2015/02/ionic-note-book-chapter-5-build-out-your-ionic-mobile-app.html" target="_blank" rel="external">Full-Stack Engineering: [Ionic 初心者筆記] 官方教學 - Ch 5 擴展你 App 的功能</a></li>
<li><a href="http://blog.kdchang.cc/2015/02/ionic-note-book-chapter-6-publish-your-app.html" target="_blank" rel="external">Full-Stack Engineering: [Ionic 初心者筆記] 官方教學 - Ch 6 發佈/上架你的 App</a></li>
</ol>
<p>其他</p>
<ol>
<li><a href="http://ionic.io/" target="_blank" rel="external">ionic 官方網站</a></li>
<li><a href="http://ionicframework.com/getting-started/" target="_blank" rel="external">ionic 官方網站-getting-started</a></li>
<li><a href="http://learn.ionicframework.com/videos/windows-android/" target="_blank" rel="external">Installing Cordova and the Android SDK on Windows 7 and 8 | Videos | Learn Ionic</a></li>
<li><a href="http://ithelp.ithome.com.tw/question/10159582" target="_blank" rel="external">ionic 實作(2)：Project 建立及架構介紹 - iT邦幫忙::IT知識分享社群</a></li>
<li><a href="https://segmentfault.com/a/1190000003809277" target="_blank" rel="external">Ubuntu 15.04開發Ionic之環境配置- 開發日誌- SegmentFault</a></li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="前言">前言</h3><p>一般我們所知的手機作業系統，以最大宗來說，iOS與Android為主要兩大市場，當然也有windows phone等等其他作業系統，這些相互獨立的市場，開發條件與方式當然截然不同。</p>
<p>想要成為一個行動裝置軟體開發者，首先你要]]>
    </summary>
    
      <category term="ionic" scheme="http://yoursite.com/tags/ionic/"/>
    
      <category term="MobileEngineer" scheme="http://yoursite.com/categories/MobileEngineer/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[\Android/ Support]]></title>
    <link href="http://yoursite.com/2016/02/01/Android-support/"/>
    <id>http://yoursite.com/2016/02/01/Android-support/</id>
    <published>2016-02-01T02:30:20.000Z</published>
    <updated>2016-02-01T09:01:18.000Z</updated>
    <content type="html"><![CDATA[<h3 id="前言">前言</h3><p>Android一些SDK比較分裂，為此google官方提供了Android Support Library package 系列的包來保證高版本sdk開發的向下兼容性, 所以你可能經常看到v4，v7，v13這些數字，首先我們就來理清楚這些數字的含義，以及它們之間的區別。</p>
<h3 id="support-v4">support-v4</h3><ul>
<li><p>用在API lever 4 (Android 1.6)或者更高版本。</p>
</li>
<li><p>它包含了相對其他版本更為豐富的內容，運用廣泛，例如：Fragment，NotificationCompat，LoadBroadcastManager，ViewPager，PageTabStrip，Loader，FileProvider 等</p>
</li>
</ul>
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">compile</span> <span class="string">'com.android.support:support-v4:21.0.3'</span></span><br></pre></td></tr></table></figure>
<h3 id="support-v7">support-v7</h3><ul>
<li><p>用於API level 7(Android 2.1)以上版本而設計的</p>
</li>
<li><p>v7是要依賴於v4，需確定你有包含 v4的檔案</p>
</li>
<li><p>v7支持了Action Bar以及一些Theme的兼容。</p>
</li>
</ul>
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">compile</span> <span class="string">'com.android.support:appcompat-v7:21.0.3'</span></span><br></pre></td></tr></table></figure>
<h3 id="support-v13">support-v13</h3><p>為了API level 13(即Android 3.2)及更高版本的，一般我們都不常用，平板開發中能用到。</p>
<h4 id="實際應用">實際應用</h4><p><code>Material Design Theme</code></p>
<p>今年的5.0版本，Android推出了Material Design的概念，這是在設計上Android的又一大突破。對應的程序實現上就有Theme.Material.Light、Theme.Material.Light.DarkActionBar等，但是這種風格只能應用在在5.0版本的手機，如果在5.0之前應用Material Design該怎麼辦呢？同樣的引用appcompat-v7包，這個時候的Theme.AppCompat.Light、Theme.AppCompat.Light.DarkActionBar就是相對應兼容的Material Design的Theme。</p>
<h4 id="注意事項">注意事項</h4><ul>
<li>gradle引用appcompat-v7包的時候就不需要引用v4了，因為v7裡默認包含了v4包</li>
</ul>
<h6 id="參考來源">參考來源</h6><ol>
<li><a href="http://stormzhang.com/android/2015/03/29/android-support-library/" target="_blank" rel="external">Android Support兼容包詳解</a></li>
<li><a href="http://www.xiaoyunduo.org/article/235/" target="_blank" rel="external">android android-support-v4 v7 v8 v13 v17 的特性说明<em>混乱记忆</em>小云朵</a></li>
<li><a href="http://fatting10.blogspot.tw/2015/04/soloved-android-support-v7-appcompat-v4.html" target="_blank" rel="external">[Soloved] android-support-v7-appcompat &amp;&amp; v4 Support Library</a></li>
<li><a href="https://developer.android.com/intl/zh-tw/tools/support-library/features.html" target="_blank" rel="external">Support Library Features | Android Developers</a></li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="前言">前言</h3><p>Android一些SDK比較分裂，為此google官方提供了Android Support Library package 系列的包來保證高版本sdk開發的向下兼容性, 所以你可能經常看到v4，v7，v13這些數字，首先我們就來理清楚這]]>
    </summary>
    
      <category term="Android" scheme="http://yoursite.com/tags/Android/"/>
    
      <category term="Support" scheme="http://yoursite.com/tags/Support/"/>
    
      <category term="MobileEngineer" scheme="http://yoursite.com/categories/MobileEngineer/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[\Android/ Android Studio 基本使用技巧 － System Log使用]]></title>
    <link href="http://yoursite.com/2015/11/25/Android-AndroidStudio-SystemLog/"/>
    <id>http://yoursite.com/2015/11/25/Android-AndroidStudio-SystemLog/</id>
    <published>2015-11-25T02:50:20.000Z</published>
    <updated>2015-11-25T02:52:08.000Z</updated>
    <content type="html"><![CDATA[<h3 id="前言">前言</h3><p>系統日誌(System Log)可幫助顯示系統信息，同時幫助Debug應用程序。如果要使用系統日誌來Debug你的應用程序，在程式碼內寫入<strong>Log程式碼</strong>，並輸出表達異常情況的字串，來幫助除錯。</p>
<h3 id="實作範例">實作範例</h3><p>增加日誌訊息使用</p>
<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> android . util . <span class="type">Log</span> ; </span><br><span class="line">... </span><br><span class="line">public  <span class="class"><span class="keyword">class</span>  <span class="title">MyActivity</span>  <span class="keyword"><span class="keyword">extends</span></span>  <span class="title">Activity</span>  &#123;</span> </span><br><span class="line">    <span class="keyword">private</span>  static  <span class="keyword">final</span>  <span class="type">String</span> <span class="type">TAG</span> =  <span class="type">MyActivity</span> . <span class="class"><span class="keyword">class</span> . <span class="title">getSimpleName</span> (</span>); </span><br><span class="line">    ... </span><br><span class="line">    <span class="annotation">@Override</span> </span><br><span class="line">    public  void onCreate ( <span class="type">Bundle</span> savedInstanceState )  &#123; </span><br><span class="line">        <span class="keyword">if</span>  ( savedInstanceState !=  <span class="literal">null</span> )  &#123; </span><br><span class="line">            <span class="type">Log</span> . d ( <span class="type">TAG</span> ,  <span class="string">"onCreate() Restoring previous state"</span> ); </span><br><span class="line">            <span class="comment">/* restore state */</span> </span><br><span class="line">        &#125;  <span class="keyword">else</span>  &#123; </span><br><span class="line">            <span class="type">Log</span> . d ( <span class="type">TAG</span> ,  <span class="string">"onCreate() No saved state available"</span> ); </span><br><span class="line">            <span class="comment">/* initialize app */</span> </span><br><span class="line">        &#125; </span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>錯誤訊息e 寫入日誌</p>
<figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">someOtherMethod</span> <span class="params">()</span>  </span>&#123; </span><br><span class="line">    <span class="keyword">try</span>  &#123; </span><br><span class="line">        ... </span><br><span class="line">    &#125;  <span class="keyword">catch</span>  ( SomeException e )  &#123; </span><br><span class="line">        Log . d ( TAG ,  <span class="string">"someOtherMethod()"</span> , e ); </span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>於DDMS查看日誌內容<br><img src="http://developer.android.com/images/tools/as-ddmslog.png" alt="DDMS"></p>
<h6 id="參考來源">參考來源</h6><ol>
<li><a href="http://developer.android.com/intl/zh-tw/tools/debugging/debugging-studio.html" target="_blank" rel="external">Debugging with Android Studio | Android Developers</a></li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="前言">前言</h3><p>系統日誌(System Log)可幫助顯示系統信息，同時幫助Debug應用程序。如果要使用系統日誌來Debug你的應用程序，在程式碼內寫入<strong>Log程式碼</strong>，並輸出表達異常情況的字串，來幫助除錯。</p>
<]]>
    </summary>
    
      <category term="Android" scheme="http://yoursite.com/tags/Android/"/>
    
      <category term="System Log" scheme="http://yoursite.com/tags/System-Log/"/>
    
      <category term="MobileEngineer" scheme="http://yoursite.com/categories/MobileEngineer/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[\Android/ Android Studio 基本使用技巧 － Debug使用]]></title>
    <link href="http://yoursite.com/2015/11/25/Android-AndroidStudio-Debug/"/>
    <id>http://yoursite.com/2015/11/25/Android-AndroidStudio-Debug/</id>
    <published>2015-11-25T02:30:20.000Z</published>
    <updated>2015-11-25T03:55:02.000Z</updated>
    <content type="html"><![CDATA[<h3 id="前言">前言</h3><p>利用Android Studio您可以：</p>
<ul>
<li>選擇一個模擬器或Android設備來測試應用程序。</li>
<li>查看系統日誌。</li>
<li>設置中斷點。</li>
<li>測試時檢查變數、運算表達式。</li>
<li>進行Debug。</li>
<li>對應用程序畫面做截圖或錄影。</li>
</ul>
<p>要Debug你的應用程序，Android Studio生成你的應用程序的可Debug版本，連接到設備或模擬器，安裝應用程序並運行它。<strong>IDE</strong>將顯示系統日誌，而你的應用程序正在運行，並提供調試工具來過濾日誌消息，中斷點工作，並控制執行流程。</p>
<h3 id="步驟實作">步驟實作</h3><p><strong>step 1</strong><br>在AndroidStudio中打開專案</p>
<p><strong>step 2</strong><br>點擊工具欄上的Debug圖示<img src="http://developer.android.com/images/tools/as-debugbutton.png" alt="Debug icon">（小昆蟲）。</p>
<p><strong>step 3</strong><br>在Choose Device的視窗，選擇一個設備（或啟動）模擬器。<br><img src="http://developer.android.com/images/tools/as-debugdevices.png" alt="Debug icon"></p>
<p><strong>step 4</strong><br>AndroidStudio將打開Debug工具視窗<img src="http://developer.android.com/images/tools/as-debugwindowbutton.png" alt="Debug belowicon">。</p>
<ul>
<li><strong>Debugger</strong> : 顯示線程（threads）和變數（variables）</li>
<li><strong>Console</strong> : 顯示設備狀態</li>
<li><strong>logcat</strong> : 顯示系統日誌(System Log)</li>
</ul>
<p><img src="http://developer.android.com/images/tools/as-debugview.png" alt="Debug工具視窗"></p>
<h6 id="參考來源">參考來源</h6><ol>
<li><a href="http://developer.android.com/intl/zh-tw/tools/debugging/debugging-studio.html" target="_blank" rel="external">Debugging with Android Studio | Android Developers</a></li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="前言">前言</h3><p>利用Android Studio您可以：</p>
<ul>
<li>選擇一個模擬器或Android設備來測試應用程序。</li>
<li>查看系統日誌。</li>
<li>設置中斷點。</li>
<li>測試時檢查變數、運算表達式。</]]>
    </summary>
    
      <category term="Android" scheme="http://yoursite.com/tags/Android/"/>
    
      <category term="Android Studio" scheme="http://yoursite.com/tags/Android-Studio/"/>
    
      <category term="MobileEngineer" scheme="http://yoursite.com/categories/MobileEngineer/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[\Android/ Parse架站]]></title>
    <link href="http://yoursite.com/2015/11/24/Android-Parse/"/>
    <id>http://yoursite.com/2015/11/24/Android-Parse/</id>
    <published>2015-11-24T02:30:20.000Z</published>
    <updated>2016-01-30T02:26:01.000Z</updated>
    <content type="html"><![CDATA[<h3 id="前言">前言</h3><p>Parse </p>
<p>要關閉了ＱＱ</p>
<p><a href="https://medium.com/@Appletone/%E9%97%9C%E6%96%BC-parse-%E6%9C%8D%E5%8B%99%E6%BA%96%E5%82%99%E9%97%9C%E6%8E%89%E7%9A%84%E4%B8%80%E4%BA%9B%E5%9B%A0%E6%87%89%E6%8E%AA%E6%96%BD-77d430d6d8a5#.5n2t3g73p" target="_blank" rel="external">關於 Parse 服務準備關掉的一些因應措施</a></p>
<h3 id="實作">實作</h3><p><strong>step 1</strong><br><a href="https://parse.com/" target="_blank" rel="external">註冊Parse</a></p>
<p><strong>step 2</strong><br><a href="https://parse.com/apps/quickstart#parse_data/mobile/android/native/new" target="_blank" rel="external">Parse Andorid QuickStart</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="前言">前言</h3><p>Parse </p>
<p>要關閉了ＱＱ</p>
<p><a href="https://medium.com/@Appletone/%E9%97%9C%E6%96%BC-parse-%E6%9C%8D%E5%8B%99%E6%BA%9]]>
    </summary>
    
      <category term="Android" scheme="http://yoursite.com/tags/Android/"/>
    
      <category term="Parse" scheme="http://yoursite.com/tags/Parse/"/>
    
      <category term="MobileEngineer" scheme="http://yoursite.com/categories/MobileEngineer/"/>
    
  </entry>
  
</feed>
